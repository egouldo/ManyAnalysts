{
  "hash": "1d0daedd24ea4f4010d3969fdfdaa226",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Effect Size Analysis\"\n# lib-dir: \"renv/library/R-4.4/aarch64-apple-darwin20/\"\nformat: \n  html:\n    code-fold: true\n    echo: true\neditor: visual\nnumber-sections: true\npre-render: \"utils.R\"\nexecute:\n  freeze: auto  # re-render only when source changes\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(withr)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(performance)\nlibrary(broom.mixed)\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(lme4)\nlibrary(MuMIn)\nlibrary(ManyEcoEvo)\nlibrary(ggrepel)\nlibrary(glue)\nlibrary(gluedown)\nset.seed(1234)\nsource(here::here(\"utils.R\"))\n```\n:::\n\n::: {.cell eavl='true'}\n\n```{.r .cell-code}\nManyEcoEvo_results <- \n  ManyEcoEvo_results %>% \n  mutate(effects_analysis = \n           map(effects_analysis, \n               rename, \n               id_col = study_id)) #%>% \n  # mutate_at(c(\"data\", \n  #             \"diversity_data\", \n  #             \"diversity_indices\", \n  #             \"effects_analysis\"),\n  #           .funs = ~ map(.x, anonymise_teams,\n  #                         TeamIdentifier_lookup))\n```\n:::\n\n\n\n\n## Meta-analysis\n\n### Effect Sizes $Z_r$\n\n#### Effect of categorical review rating\n\nThe figures below (@fig-euc-cat-ratings-MA, @fig-bt-cat-ratings-MA) hows the fixed effect of categorical review rating on deviation from the meta-analytic mean. There is very little difference in deviation for analyses in any of the review categories. It is worth noting that each analysis features multiple times in these figures corresponding to the multiple reviewers that provided ratings.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\norchard_publishability <- function(dat){\n  rma_mod_rating <-  \n    metafor::rma.mv(yi = Zr, \n                    V = VZr, \n                    data = dat, \n                    control = list(maxiter = 1000),mods = ~ PublishableAsIs,\n                    sparse = TRUE,\n                    random = list(~1|response_id, ~1|ReviewerId)) \n  \n  orchaRd::orchard_plot(rma_mod_rating, \n                        mod = \"PublishableAsIs\", \n                        group = \"id_col\", \n                        xlab = \"Standardised Correlation Coefficient (Zr)\",\n                        cb = TRUE,angle = 45) \n}\n\nManyEcoEvo_results$effects_analysis[[2]] %>% \n    filter(Zr > -4) %>% \n    unnest(review_data) %>% \n    select(Zr, VZr, id_col, PublishableAsIs, ReviewerId, response_id) %>% \n    mutate(PublishableAsIs = forcats::as_factor(PublishableAsIs) %>% \n               forcats::fct_relevel(c(\"deeply flawed and unpublishable\", \n                                      \"publishable with major revision\", \n                                      \"publishable with minor revision\", \n                                      \"publishable as is\" ))) %>% \n    orchard_publishability() +\n    theme(text = element_text(size = 20),axis.text.y = element_text(size = 20)) +\n    scale_x_discrete(labels=c(\"Deeply Flawed\\n & Unpublishable\", \"Publishable With\\n Major Revision\", \"Publishable With\\n Minor Revision\", \"Publishable\\n As Is\"))\n```\n\n::: {.cell-output-display}\n![Orchard plot of meta-analytic model fitted to all *Eucalyptus* analyses with a fixed effect for categorical peer-review ratings, and random effects for analyst ID and reviewer ID. Black circles denote coefficient mean for each categorical publishability rating. Thick error bars represent 95% confidence intervals and whiskers indicate 95% prediction intervals. Effect sizes are represented by circles and their size corresponds to the precision of the estimate.](SM2_EffectSizeAnalysis_files/figure-html/fig-euc-cat-ratings-MA-1.png){#fig-euc-cat-ratings-MA width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nManyEcoEvo_results$effects_analysis[[1]] %>% \n#    filter(Zr > -4) %>% \n    unnest(review_data) %>% \n    select(Zr, VZr, id_col, PublishableAsIs, ReviewerId, response_id) %>% \n    mutate(PublishableAsIs = forcats::as_factor(PublishableAsIs) %>% \n               forcats::fct_relevel(c(\"deeply flawed and unpublishable\", \n                                      \"publishable with major revision\", \n                                      \"publishable with minor revision\", \n                                      \"publishable as is\" ))) %>% \n    orchard_publishability() +\n    theme(text = element_text(size = 20),axis.text.y = element_text(size = 20)) +\n    scale_x_discrete(labels=c(\"Deeply Flawed\\n & Unpublishable\", \"Publishable With\\n Major Revision\", \"Publishable With\\n Minor Revision\", \"Publishable\\n As Is\"))\n```\n\n::: {.cell-output-display}\n![Orchard plot of meta-analytic model fitted to all blue tit analyses with a fixed effect for categorical peer-review ratings, and random effects for analyst ID and reviewer ID. Black circles denote coefficient mean for each categorical publishability rating. Thick error bars represent 95% confidence intervals and whiskers indicate 95% prediction intervals. Effect sizes are represented by circles and their size corresponds to the precision of the estimate.](SM2_EffectSizeAnalysis_files/figure-html/fig-bt-cat-ratings-MA-1.png){#fig-bt-cat-ratings-MA width=768}\n:::\n:::\n\n\n\n\n#### Post-hoc analysis: Exploring the effect of removing analyses with poor peer-review ratings on heterogeneity\n\nThe forest plots in @fig-all-forest-plots-Zr compare the distributions of $Z_r$ effects from our full set of analyses with the distributions of $Z_r$ effects from our post-hoc analyses, which removed either analyses that were reviewed at least once as being 'unpublishable', and analyses that were reviewed at least once as being 'unpublishable' or requiring 'major revisions'. Removing these analyses from the blue tit data had little impact on the overall distribution of the results. When 'unpublishable' analyses of the *Eucalyptus* dataset were removed, the extreme outlier 'Brooklyn-2-2-1' was also removed, resulting in a substantial difference to the amount of observed deviation from the meta-analytic mean.\n\n\n\n\n::: {.cell .column-body-outset-right}\n\n```{.r .cell-code}\n# TeamIdentifier_lookup <- read_csv(here::here(\"data-raw/metadata_and_key_data/TeamIdentifierAnonymised.csv\"))\n\nplot_forest <- function(data, intercept = TRUE, MA_mean = TRUE){\n  if (MA_mean == FALSE){\n    data <- filter(data, Parameter != \"overall\")\n  }\n  \n  p <- ggplot(data, aes(y = estimate, \n                        x =  term, \n                        ymin = conf.low, \n                        ymax = conf.high,\n                        shape = point_shape,\n                        colour = parameter_type)) +\n    geom_pointrange(fatten = 2) +\n    ggforestplot::theme_forest() +\n    theme(axis.line = element_line(linewidth = 0.10, \n                                   colour = \"black\"),\n          axis.line.y = element_blank(),\n          text = element_text(family = \"Helvetica\")#,\n          # axis.text.y = element_blank()\n    ) +\n    guides(shape = \"none\", colour = \"none\") +\n    coord_flip() +\n    ylab(bquote(Standardised~Effect~Size~Z[r])) +\n    xlab(element_blank()) +\n    # scale_y_continuous(breaks = c(-4,-3,-2,-1,0,1),\n    # minor_breaks = seq(from = -4.5, to = 1.5, by = 0.5)) +\n    NatParksPalettes::scale_color_natparks_d(\"Glacier\")\n  \n  if(intercept == TRUE){\n    p <- p + geom_hline(yintercept = 0)\n  }\n  if(MA_mean == TRUE){\n    p <- p + geom_hline(aes(yintercept = meta_analytic_mean), \n                        data = data,\n                        colour = \"#01353D\", \n                        linetype = \"dashed\")\n  }\n  \n  return(p)\n}\n\npublishable_subsets_forest_data <- \n  ManyEcoEvo_viz %>% \n  filter(model_name == \"MA_mod\",\n         exclusion_set == \"complete\",\n         expertise_subset == \"All\") %>% \n  select(ends_with(\"set\"), model, -expertise_subset) %>%  \n  mutate(plot_data = \n           map(model, \n               .f = \n                 ~broom::tidy(.x, \n                              conf.int = TRUE, \n                              include_studies = TRUE) %>% \n                 mutate(Parameter = \n                          forcats::fct_reorder(term, estimate))),\n         meta_analytic_mean = \n           map_dbl(plot_data, \n                   ~ filter(.x, \n                            Parameter == \"overall\") %>% \n                     pull(estimate))) %>% \n  select(dataset, \n         publishable_subset, \n         plot_data, \n         meta_analytic_mean) %>% \n  unnest(cols = c(\"plot_data\")) %>% \n  mutate(parameter_type = \n           case_when(\n             str_detect(Parameter, \"overall\") ~ \"mean\",\n             TRUE ~ \"study\"))  %>% \n  group_by(dataset, publishable_subset) %>%\n  dplyr::mutate(point_shape = \n                  ifelse(stringr::str_detect(term, \"overall\"), \n                         \"diamond\", \n                         \"circle\")) \n\n# publishable_subsets_forest_data <- \n#   publishable_subsets_forest_data %>% \n#    rename(id_col = term) %>% \n#   group_by(type) %>%  \n#   group_split() %>% \n#   set_names(., publishable_subsets_forest_data$type %>%  unique) %>% \n#   # map_if(.x = ., names(.) == \"study\",\n#   #        .f = ~ anonymise_teams(.x, TeamIdentifier_lookup)) %>% \n#   bind_rows() %>% \n#   rename(term = id_col)\n\nlibrary(tidytext)\n\ntidy_overall_labeller <- . %>% \n  str_split(\"_\") %>% \n  flatten_chr() %>% \n  pluck(1)\n\ntidy_forest_labels <- Vectorize(tidy_overall_labeller)\n\npublishable_subsets_forest_data %>% \n  group_by(dataset, publishable_subset) %>% \n  mutate(term = case_when(term == \"overall\" ~ \n                            paste(term, \n                                   dataset, \n                                   publishable_subset,\n                                  sep = \"_\"), \n                          TRUE ~ term),\n         dataset = case_when(dataset == \"blue tit\" ~ \"Blue tit\",\n                              dataset == \"eucalyptus\" ~ \"Eucalyptus\",\n                              TRUE ~ NA)) %>% \n  arrange(across(.cols = c(type, estimate)),\n          .by_group = TRUE) %>% \n  rowid_to_column() %>% \n  mutate(term = reorder(term, rowid),\n         publishable_subset = \n           case_when(publishable_subset == \"All\" ~ \n                       \"All analyses\",\n                     publishable_subset == \"data_flawed\" ~ \n                       \"'Unpublishable'\\nremoved\",\n                     publishable_subset == \"data_flawed_major\" ~ \n                       \"'Unpublishable' &\\n'Major Revisions'\\nremoved\",\n                     TRUE ~ \"\")) %>%  \n  plot_forest() +\n  scale_x_reordered(labels =  tidy_forest_labels) +\n  ggh4x::facet_nested(dataset ~ publishable_subset,\n                      independent = \"y\", \n                      scales = \"free\")\n```\n\n::: {.cell-output-display}\n![Forest plots of meta-analytic estimated standardized effect sizes ($Z_r$, blue circles) and their 95% confidence intervals for each effect size included in the meta-analysis model. The meta-analytic mean effect size is denoted by a black triangle and a dashed vertical line, with error bars also representing the 95% confidence interval. The solid black vertical line demarcates effect size of 0, indicating no relationship between the test variable and the response variable. The left side of each panel shows the analysis team names (anonymous arbitrary names assigned by us), each followed by three numbers. The first number is the submission ID (some analyst teams submitted results to us on >1 submission form), the second number is the analysis ID (some analyst teams included results of >1 analysis in a given submission), and the third number is the effect ID (some analysts submitted values for >1 effect per analysis). Thus, each row in each forest plot is uniquely identified, but it is possible to determine which effects come from which analyses and which analysis teams. The plots in the top row depict effects from analyses of blue tit data, and the bottom row plots depict effects from analyses of Eucalyptus data. The right-most plots depict all usable effect sizes. The plots on the left exclude effects from analysis sets that received at least one rating of “unpublishable” from peer reviewers, and the plots in the middle exclude effects from analysis sets that received at least one rating of either “unpublishable” or “major revision” from peer reviewers.](SM2_EffectSizeAnalysis_files/figure-html/fig-all-forest-plots-Zr-1.png){#fig-all-forest-plots-Zr width=960}\n:::\n:::\n\n\n\n\n#### Post-hoc analysis: Exploring the effect of excluding estimates in which we had reduced confidence\n\nFor each dataset (blue tit, Eucalyptus), we created a second, more conservative version, that excluded effects based on estimates of $\\mathit{df}$ that we considered less reliable (@tbl-Zr-exclusion-subsetting). We compared the outcomes of analyses of the primary dataset (constituted according to our registered plan) with the outcomes of analyses of the more conservative version of the dataset. We also compared results from analyses of both of these versions of the dataset to versions with our post-hoc removal of outliers described in the main text. Our more conservative exclusions (based on unreliable estimates of $\\mathit{df}$ ) had minimal impact on the meta-analytic mean for both blue tit and Eucalyptus analyses, regardless of whether outliers were excluded (@tbl-Zr-exclusion-subsetting).\n\n\n\n\n::: {#tbl-Zr-exclusion-subsetting .cell tbl-cap='Estimated meta-analytic mean, standard error, and 95% confidence intervals, from analyses of the primary data set, the more conservative version of the dataset which excluded effects based on less reliable estimates of $\\mathit{df}$, and both of these datasets with outliers removed.'}\n\n```{.r .cell-code}\nManyEcoEvo_viz %>% \n    dplyr::filter(estimate_type == \"Zr\", \n                  model_name == \"MA_mod\", \n                  collinearity_subset != \"collinearity_removed\",\n                  publishable_subset == \"All\", \n                  expertise_subset == \"All\") %>% \n    select(dataset, exclusion_set, tidy_mod_summary) %>% \n    unnest(tidy_mod_summary) %>% \n    filter(type == \"summary\") %>% \n  select(-term, -type) %>% \n  mutate(exclusion_set = \n           case_when(exclusion_set == \"complete\" ~ \n                       \"Primary dataset\",\n                     exclusion_set == \"complete-rm_outliers\" ~ \n                       \"Primary dataset, outliers removed\",\n                     exclusion_set == \"partial\" ~ \n                       \"Conservative exclusions\",\n                     TRUE ~ \"Conservative exclusions, outliers removed\")) %>% \ngroup_by(exclusion_set) %>% \n  gt::gt() %>% \n  gt::opt_stylize(style = 6, color = \"gray\") %>% \n  gt::fmt(columns = \"p.value\",\n          fns = function(x) gtsummary::style_pvalue(x, prepend_p = FALSE)) %>% \n  gt::fmt_number(columns = c(-p.value, -dataset)) %>% \n  gt::cols_label(estimate = gt::md(\"$$\\\\hat\\\\mu$$\"), \n                 std.error = gt::md(\"$$\\text{SE}[\\\\hat\\\\mu]$$\"),\n                 conf.low = gt::md(\"95\\\\%CI\")) %>% \n  gt::cols_merge(columns = starts_with(\"conf\"), \n                 pattern = \"[{1},{2}]\") %>% \n  gt::cols_move(columns = conf.low, after = std.error) %>% \n   gt::tab_style(\n    style = list(gt::cell_text(transform = \"capitalize\"), \n                 gt::cell_text(style = \"italic\")),\n    locations = gt::cells_body(columns = \"dataset\", rows = dataset == \"eucalyptus\")\n  ) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"pzveloiefp\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#pzveloiefp table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#pzveloiefp thead, #pzveloiefp tbody, #pzveloiefp tfoot, #pzveloiefp tr, #pzveloiefp td, #pzveloiefp th {\n  border-style: none;\n}\n\n#pzveloiefp p {\n  margin: 0;\n  padding: 0;\n}\n\n#pzveloiefp .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#pzveloiefp .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#pzveloiefp .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#pzveloiefp .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#pzveloiefp .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #5F5F5F;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#pzveloiefp .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #5F5F5F;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#pzveloiefp .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#pzveloiefp .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#pzveloiefp .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#pzveloiefp .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#pzveloiefp .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#pzveloiefp .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  vertical-align: middle;\n}\n\n#pzveloiefp .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#pzveloiefp .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#pzveloiefp .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: none;\n  border-top-width: 1px;\n  border-top-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D5D5D5;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D5D5D5;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#pzveloiefp .gt_stub {\n  color: #333333;\n  background-color: #D5D5D5;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D5D5D5;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pzveloiefp .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#pzveloiefp .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#pzveloiefp .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#pzveloiefp .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pzveloiefp .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #5F5F5F;\n}\n\n#pzveloiefp .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#pzveloiefp .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#pzveloiefp .gt_grand_summary_row {\n  color: #333333;\n  background-color: #D5D5D5;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pzveloiefp .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #5F5F5F;\n}\n\n#pzveloiefp .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #5F5F5F;\n}\n\n#pzveloiefp .gt_striped {\n  background-color: #F4F4F4;\n}\n\n#pzveloiefp .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#pzveloiefp .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pzveloiefp .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#pzveloiefp .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pzveloiefp .gt_left {\n  text-align: left;\n}\n\n#pzveloiefp .gt_center {\n  text-align: center;\n}\n\n#pzveloiefp .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#pzveloiefp .gt_font_normal {\n  font-weight: normal;\n}\n\n#pzveloiefp .gt_font_bold {\n  font-weight: bold;\n}\n\n#pzveloiefp .gt_font_italic {\n  font-style: italic;\n}\n\n#pzveloiefp .gt_super {\n  font-size: 65%;\n}\n\n#pzveloiefp .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#pzveloiefp .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#pzveloiefp .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#pzveloiefp .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#pzveloiefp .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#pzveloiefp .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#pzveloiefp .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#pzveloiefp .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#pzveloiefp div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"dataset\">dataset</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;JCRcaGF0XG11JCQ=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;$$\\hat\\mu$$&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"JCRcaGF0XG11JCQ=\"><div class='gt_from_md'><p>$$\\hat\\mu$$</p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;JCQJZXh0e1NFfVtcaGF0XG11XSQk&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;$$\text{SE}[\\hat\\mu]$$&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"JCQJZXh0e1NFfVtcaGF0XG11XSQk\"><div class='gt_from_md'><p>$$\text{SE}[\\hat\\mu]$$</p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;OTVcJUNJ&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;95%CI&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"OTVcJUNJ\"><div class='gt_from_md'><p>95%CI</p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"statistic\">statistic</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"p.value\">p.value</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Primary dataset\">Primary dataset</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"Primary dataset  dataset\" class=\"gt_row gt_left\">blue tit</td>\n<td headers=\"Primary dataset  estimate\" class=\"gt_row gt_right\">−0.35</td>\n<td headers=\"Primary dataset  std.error\" class=\"gt_row gt_right\">0.03</td>\n<td headers=\"Primary dataset  conf.low\" class=\"gt_row gt_right\">[−0.41,−0.29]</td>\n<td headers=\"Primary dataset  statistic\" class=\"gt_row gt_right\">−11.02</td>\n<td headers=\"Primary dataset  p.value\" class=\"gt_row gt_right\"><0.001</td></tr>\n    <tr><td headers=\"Primary dataset  dataset\" class=\"gt_row gt_left gt_striped\" style=\"text-transform: capitalize; font-style: italic;\">eucalyptus</td>\n<td headers=\"Primary dataset  estimate\" class=\"gt_row gt_right gt_striped\">−0.09</td>\n<td headers=\"Primary dataset  std.error\" class=\"gt_row gt_right gt_striped\">0.06</td>\n<td headers=\"Primary dataset  conf.low\" class=\"gt_row gt_right gt_striped\">[−0.22,0.03]</td>\n<td headers=\"Primary dataset  statistic\" class=\"gt_row gt_right gt_striped\">−1.47</td>\n<td headers=\"Primary dataset  p.value\" class=\"gt_row gt_right gt_striped\">0.14</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Conservative exclusions\">Conservative exclusions</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"Conservative exclusions  dataset\" class=\"gt_row gt_left\">blue tit</td>\n<td headers=\"Conservative exclusions  estimate\" class=\"gt_row gt_right\">−0.36</td>\n<td headers=\"Conservative exclusions  std.error\" class=\"gt_row gt_right\">0.03</td>\n<td headers=\"Conservative exclusions  conf.low\" class=\"gt_row gt_right\">[−0.42,−0.29]</td>\n<td headers=\"Conservative exclusions  statistic\" class=\"gt_row gt_right\">−10.77</td>\n<td headers=\"Conservative exclusions  p.value\" class=\"gt_row gt_right\"><0.001</td></tr>\n    <tr><td headers=\"Conservative exclusions  dataset\" class=\"gt_row gt_left gt_striped\" style=\"text-transform: capitalize; font-style: italic;\">eucalyptus</td>\n<td headers=\"Conservative exclusions  estimate\" class=\"gt_row gt_right gt_striped\">−0.11</td>\n<td headers=\"Conservative exclusions  std.error\" class=\"gt_row gt_right gt_striped\">0.07</td>\n<td headers=\"Conservative exclusions  conf.low\" class=\"gt_row gt_right gt_striped\">[−0.24,0.03]</td>\n<td headers=\"Conservative exclusions  statistic\" class=\"gt_row gt_right gt_striped\">−1.55</td>\n<td headers=\"Conservative exclusions  p.value\" class=\"gt_row gt_right gt_striped\">0.12</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Primary dataset, outliers removed\">Primary dataset, outliers removed</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"Primary dataset, outliers removed  dataset\" class=\"gt_row gt_left\">blue tit</td>\n<td headers=\"Primary dataset, outliers removed  estimate\" class=\"gt_row gt_right\">−0.36</td>\n<td headers=\"Primary dataset, outliers removed  std.error\" class=\"gt_row gt_right\">0.03</td>\n<td headers=\"Primary dataset, outliers removed  conf.low\" class=\"gt_row gt_right\">[−0.42,−0.30]</td>\n<td headers=\"Primary dataset, outliers removed  statistic\" class=\"gt_row gt_right\">−11.48</td>\n<td headers=\"Primary dataset, outliers removed  p.value\" class=\"gt_row gt_right\"><0.001</td></tr>\n    <tr><td headers=\"Primary dataset, outliers removed  dataset\" class=\"gt_row gt_left gt_striped\" style=\"text-transform: capitalize; font-style: italic;\">eucalyptus</td>\n<td headers=\"Primary dataset, outliers removed  estimate\" class=\"gt_row gt_right gt_striped\">−0.03</td>\n<td headers=\"Primary dataset, outliers removed  std.error\" class=\"gt_row gt_right gt_striped\">0.01</td>\n<td headers=\"Primary dataset, outliers removed  conf.low\" class=\"gt_row gt_right gt_striped\">[−0.06,0.00]</td>\n<td headers=\"Primary dataset, outliers removed  statistic\" class=\"gt_row gt_right gt_striped\">−2.23</td>\n<td headers=\"Primary dataset, outliers removed  p.value\" class=\"gt_row gt_right gt_striped\">0.026</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"6\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"Conservative exclusions, outliers removed\">Conservative exclusions, outliers removed</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"Conservative exclusions, outliers removed  dataset\" class=\"gt_row gt_left\">blue tit</td>\n<td headers=\"Conservative exclusions, outliers removed  estimate\" class=\"gt_row gt_right\">−0.36</td>\n<td headers=\"Conservative exclusions, outliers removed  std.error\" class=\"gt_row gt_right\">0.03</td>\n<td headers=\"Conservative exclusions, outliers removed  conf.low\" class=\"gt_row gt_right\">[−0.43,−0.30]</td>\n<td headers=\"Conservative exclusions, outliers removed  statistic\" class=\"gt_row gt_right\">−11.38</td>\n<td headers=\"Conservative exclusions, outliers removed  p.value\" class=\"gt_row gt_right\"><0.001</td></tr>\n    <tr><td headers=\"Conservative exclusions, outliers removed  dataset\" class=\"gt_row gt_left gt_striped\" style=\"text-transform: capitalize; font-style: italic;\">eucalyptus</td>\n<td headers=\"Conservative exclusions, outliers removed  estimate\" class=\"gt_row gt_right gt_striped\">−0.04</td>\n<td headers=\"Conservative exclusions, outliers removed  std.error\" class=\"gt_row gt_right gt_striped\">0.02</td>\n<td headers=\"Conservative exclusions, outliers removed  conf.low\" class=\"gt_row gt_right gt_striped\">[−0.07,−0.01]</td>\n<td headers=\"Conservative exclusions, outliers removed  statistic\" class=\"gt_row gt_right gt_striped\">−2.52</td>\n<td headers=\"Conservative exclusions, outliers removed  p.value\" class=\"gt_row gt_right gt_striped\">0.012</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_forest <- function(data, intercept = TRUE, MA_mean = TRUE ){\n  if (MA_mean == FALSE) {\n    data <- filter(data, term != \"Overall\")\n  }\n  \n    p <- ggplot(data, aes(y = term, \n                        x =  estimate, \n                        ymin = conf.low, \n                        ymax = conf.high,\n                        # shape = point_shape,\n                        colour = parameter_type)) +\n    geom_pointrange() +\n    ggforestplot::theme_forest() +\n    theme(axis.line = element_line(size = 0.10, colour = \"black\"),\n          axis.line.y = element_blank(),\n          text = element_text(family = \"Helvetica\"),\n          axis.text.y = element_blank()) +\n    guides(shape = \"none\", colour = \"none\") +\n    coord_flip() +\n    labs(y = \"Standardised Effect Size, Zr\",\n         x = element_blank()) +\n    scale_x_continuous(breaks = c(-4,-3,-2,-1,0,1),\n                       minor_breaks = seq(from = -4.5, to = 1.5, by = 0.5)) +\n    NatParksPalettes::scale_color_natparks_d(\"Glacier\")\n    \n    if (intercept == TRUE) {\n      p <- p + geom_hline(yintercept = 0)\n    }\n    if (MA_mean == TRUE) {\n      p <- p + geom_hline(aes(yintercept = meta_analytic_mean), \n                          data = data,\n                          colour = \"#01353D\", \n                          linetype = \"dashed\")\n    }\n    \n  return(p)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncomplete_euc_data <- \n  ManyEcoEvo_viz %>% \n  filter(exclusion_set == \"complete\", \n         estimate_type == \"Zr\", \n         model_name == \"MA_mod\",\n         dataset == \"eucalyptus\",\n         publishable_subset == \"All\",\n         expertise_subset == \"All\") %>% \n  select(tidy_mod_summary) %>% \n  mutate(plot_data = map(tidy_mod_summary, \n                         .f = ~ dplyr::mutate(.x, \n                                            point_shape = \n                                              ifelse(stringr::str_detect(term, \"overall\"), \n                                                     \"diamond\", \n                                                     \"circle\"),\n                                            Parameter = \n                                              forcats::fct_reorder(term, \n                                                                   estimate) %>% \n                                              forcats::fct_reorder(., \n                                                                   point_shape,\n                                                                   .desc = TRUE))\n  ),\n  meta_analytic_mean = map_dbl(plot_data, \n                               ~ filter(.x, Parameter == \"overall\") %>% \n                                 pull(estimate))) %>% \n  select(plot_data, meta_analytic_mean) %>% \n  unnest(cols = c(\"plot_data\")) %>% \n  mutate(parameter_type = case_when(str_detect(Parameter, \"overall\") ~ \"mean\",\n                                    TRUE ~ \"study\"))\n\n  # ManyEcoEvo_viz %>% \n  # filter(exclusion_set == \"complete\", \n  #        estimate_type == \"Zr\", \n  #        model_name == \"MA_mod\",\n  #        dataset == \"eucalyptus\",\n  #        publishable_subset == \"All\",\n  #        expertise_subset == \"All\") %>% \n  # )\n\nmin_outlier_euc <- complete_euc_data %>% \n  filter(type == \"study\") %>% \n  slice_min(estimate, n = 3) %>% \n  pull(term)\n\nsample_size_euc_Zr <- ManyEcoEvo_results %>% \n    filter(exclusion_set == \"complete\", dataset == \"eucalyptus\") %>% \n    pluck(\"data\", 1) %>% \n    select(id_col, sample_size) %>% \n    rename(term = id_col) %>% \n    mutate(sample_size = as.numeric(sample_size))\n\nmean_n_euc_Zr <- sample_size_euc_Zr %>% \n  drop_na(sample_size) %>% \n  pull(sample_size) %>% \n  mean() %>% \n  round(2)\n\nN_outliers_Zr_euc <- sample_size_euc_Zr %>% \n  filter(term %in% min_outlier_euc) %>% \n   arrange(desc(sample_size))\n```\n:::\n\n\n\n\n#### Post-hoc analysis: Exploring the effect of including only analyses conducted by analysis teams with at least one member self-rated as \"highly proficient\" or \"expert\" in conducting statitistical analyses in their research area\n\nThe anonymous Team Identifiers in the reduced subset of \"expert\" or \"highly proficient\" analysts are exported internally in the `ManyEcoEvo` package as `ManyEcoEvo:::expert_subset`. Analyses from the following teams are retained in the reduced subset: _Bell_, _Berr_, _Brim_, _Bruc_, _Burr_, _Byng_, _Cape_, _Clar_, _Clev_, _Alban_, _Alpha_, _Bargo_, _Berry_, _Bowen_, _Bulli_, _Aldgat_, _Alding_, _Anakie_, _Aramac_, _August_, _Bamaga_, _Barham_, _Barmah_, _Batlow_, _Beltan_, _Bethan_, _Beulah_, _Bindoo_, _Boonah_, _Bowral_, _Bright_, _Buchan_, _Burnie_, _Cairns_, _Casino_, _Cattai_, _Adelong_, _Angasto_, _Antwerp_, _Arltung_, _Ashford_, _Babinda_, _Bargara_, _Barooga_, _Barraba_, _Belmont_, _Bemboka_, _Benalla_, _Bendigo_, _Berrima_, _Berwick_, _Beverle_, _Bicheno_, _Biloela_, _Birchip_, _Bombala_, _Bonalbo_, _Brookto_, _Bruthen_, _Buderim_, _Candelo_, _Capella_, _Carcoar_, _Carnama_, _Chewton_, _Anglesea_, _Ardrossa_, _Armidale_, _Atherton_, _Balaklav_, _Ballarat_, _Barellan_, _Belgrave_, _Berrigan_, _Binalong_, _Binnaway_, _Blackall_, _Boggabri_, _Bridport_, _Brooklyn_, _Buckland_, _Bundeena_, _Bungonia_, _Busselto_, _Calliope_, _Cardwell_, _Cassilis_, _Cessnock_, _Charlton_.\n\n\n\n\n::: {#fig-forest-plot-expertise .cell}\n\n```{.r .cell-code}\nplot_forest <- function(data, intercept = TRUE, MA_mean = TRUE){\n  if (MA_mean == FALSE){\n    data <- filter(data, Parameter != \"overall\")\n  }\n  \n  p <- ggplot(data, aes(y = estimate, \n                        x =  term, \n                        ymin = conf.low, \n                        ymax = conf.high,\n                        shape = parameter_type,\n                        colour = parameter_type)) +\n    geom_pointrange(fatten = 2) +\n    ggforestplot::theme_forest() +\n    theme(axis.line = element_line(linewidth = 0.10, colour = \"black\"),\n          axis.line.y = element_blank(),\n          text = element_text(family = \"Helvetica\")#,\n          # axis.text.y = element_blank()\n    ) +\n    guides(shape = guide_legend(title = NULL), \n           colour = guide_legend(title = NULL)) +\n    coord_flip() +\n    ylab(bquote(Standardised~Effect~Size~Z[r])) +\n    xlab(element_blank()) +\n    # scale_y_continuous(breaks = c(-4,-3,-2,-1,0,1),\n    # minor_breaks = seq(from = -4.5, to = 1.5, by = 0.5)) +\n    NatParksPalettes::scale_color_natparks_d(\"Glacier\")\n  \n  if(intercept == TRUE){\n    p <- p + geom_hline(yintercept = 0)\n  }\n  if(MA_mean == TRUE){\n    p <- p + geom_hline(aes(yintercept = meta_analytic_mean), \n                        data = data,\n                        colour = \"#01353D\", \n                        linetype = \"dashed\")\n  }\n  \n  return(p)\n}\n\nfilter_experts <- \n  rlang::exprs(\n    exclusion_set == \"complete\", \n    estimate_type == \"Zr\", \n    model_name == \"MA_mod\",\n    publishable_subset == \"All\", \n    expertise_subset == \"expert\")\n\nbt_experts_only <- \n  ManyEcoEvo_viz %>% \n  filter(!!!filter_experts, \n         dataset == \"blue tit\") %>% \n  select(tidy_mod_summary) %>% \n  mutate(plot_data = map(tidy_mod_summary, \n                         .f = ~ dplyr::mutate(.x, \n                                            point_shape = \n                                              ifelse(stringr::str_detect(term, \"overall\"), \n                                                     \"diamond\", \n                                                     \"circle\"),\n                                            Parameter = \n                                              forcats::fct_reorder(term, \n                                                                   estimate) %>% \n                                              forcats::fct_reorder(., \n                                                                   point_shape,\n                                                                   .desc = TRUE))\n  ),\n  meta_analytic_mean = map_dbl(plot_data, \n                               ~ filter(.x, Parameter == \"overall\") %>% \n                                 pull(estimate))) %>% \n  select(plot_data, meta_analytic_mean) %>% \n  unnest(cols = c(\"plot_data\")) %>% \n  mutate(parameter_type = case_when(str_detect(Parameter, \"overall\") ~ \"mean\",\n                                    TRUE ~ \"study\")) \n\n# bt_experts_only <- \n#   bt_experts_only %>% \n#   rename(id_col = term) %>% \n#   group_by(type) %>%  \n#   group_split() %>% \n#   set_names(., bt_experts_only$type %>%  unique) %>% \n#   # map_if(.x = ., names(.) == \"study\",\n#          # .f = ~ anonymise_teams(.x, TeamIdentifier_lookup)) %>% \n#   bind_rows() %>% \n#   rename(term = id_col)\n\nbt_forest_experts <- bt_experts_only %>% \n  arrange(desc(type)) %>% \n  mutate(type = forcats::as_factor(type)) %>% \n  group_by(type) %>% \n  arrange(desc(estimate),.by_group = TRUE) %>% \n  mutate(term = forcats::as_factor(term),\n         point_shape = case_when(str_detect(type, \"summary\") ~ \"mean\",\n                                 TRUE ~ \"study\")) %>% \n  plot_forest(intercept = TRUE, MA_mean = TRUE) +\n  theme(axis.text.x = element_text(size = 15), \n        axis.title.x = element_text(size = 15),\n        axis.text.y = element_blank()\n  ) +\n  scale_y_continuous(limits = c(-1.6, 0.65)) \n\neuc_experts_only <- \n  ManyEcoEvo_viz %>% \n  filter(!!!filter_experts, \n         dataset == \"eucalyptus\") %>% \n  select(model) %>% \n  mutate(plot_data = map(model, \n                         .f = ~ broom::tidy(.x, \n                                            conf.int = TRUE, \n                                            include_studies = TRUE) %>% \n                           dplyr::mutate(point_shape = \n                                           ifelse(stringr::str_detect(term, \"overall\"), \n                                                  \"diamond\", \n                                                  \"circle\"),\n                                         Parameter = \n                                           forcats::fct_reorder(term, \n                                                                estimate) %>% \n                                           forcats::fct_reorder(., \n                                                                point_shape,\n                                                                .desc = TRUE))\n  ),\n  meta_analytic_mean = map_dbl(plot_data, \n                               ~ filter(.x, Parameter == \"overall\") %>% \n                                 pull(estimate))) %>% \n  select(plot_data, meta_analytic_mean) %>% \n  unnest(cols = c(\"plot_data\")) %>% \n  mutate(parameter_type = case_when(str_detect(Parameter, \"overall\") ~ \"mean\",\n                                    TRUE ~ \"study\"))\n\n# euc_experts_only <- \n#   euc_experts_only %>% \n#   rename(id_col = term) %>% \n#   group_by(type) %>%  \n#   group_split() %>% \n#   set_names(., euc_experts_only$type %>%  unique) %>% \n#   # map_if(.x = ., names(.) == \"study\",\n#          # .f = ~ anonymise_teams(.x, TeamIdentifier_lookup)) %>% \n#   bind_rows() %>% \n#   rename(term = id_col)\n\neuc_forest_experts <- euc_experts_only %>% \n  arrange(desc(type)) %>% \n  mutate(type = forcats::as_factor(type)) %>% \n  group_by(type) %>% \n  arrange(desc(estimate),.by_group = TRUE) %>% \n  mutate(term = forcats::as_factor(term),\n         point_shape = case_when(str_detect(type, \"summary\") ~ \"mean\",\n                                 TRUE ~ \"study\")) %>% \n  plot_forest(intercept = TRUE, MA_mean = TRUE) +\n  theme(axis.text.x = element_text(size = 15), \n        axis.title.x = element_text(size = 15),\n        axis.text.y = element_blank()\n  ) +\n  scale_y_continuous(limits = c(-5, 1), \n                     breaks = c(-5, -4, -3, -2, -1, 0, 1) )\n\n# ---- Extract Viz ----\n\nbt_forest_experts\n\neuc_forest_experts\n```\n\n::: {.cell-output-display}\n![Blue tit dataset analyses](SM2_EffectSizeAnalysis_files/figure-html/fig-forest-plot-expertise-1.png){#fig-forest-plot-expertise-1 width=672}\n:::\n\n::: {.cell-output-display}\n![*Eucalyptus* dataset analyses](SM2_EffectSizeAnalysis_files/figure-html/fig-forest-plot-expertise-2.png){#fig-forest-plot-expertise-2 width=672}\n:::\n\nEstimated meta-analytic mean effect size ($Z_r$), standard error, and 95% confidence intervals, from analyses of the primary data set with at least one member self-rated as \"highly proficient\" or \"expert\" in conducting statistical analyses in their research area.\n:::\n\n\n\n\n#### Post-hoc analysis: Exploring the effect of excluding analyses of the blue tit dataset containing highly collinear predictor variables\n\nFor the blue tit dataset, we created a subset of analyses that excluded effects based on analyses containing highly correlated predictor variables. Excluded analyses are exported internally in the `ManyEcoEvo` package as `ManyEcoEvo::collinearity_subset`. Analyses with the following identifiers are excluded in the reduced subset: _Armadal-1-1-1_, _Babinda-1-1-1_, _Babinda-2-2-1_, _Barham-1-1-1_, _Barham-2-2-1_, _Bega-1-1-1_, _Bega-1-1-2_, _Bega-2-2-1_, _Bega-2-2-2_, _Borde-1-1-1_, _Bruc-1-1-1_, _Caigun-1-1-1_, _Caigun-2-2-1_, _Adelong-1-1-1_, _Adelong-2-2-1_.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter_collinear <- rlang::exprs(exclusion_set == \"complete\", \n                              publishable_subset == \"All\", \n                              expertise_subset == \"All\", \n                              collinearity_subset == \"collinearity_removed\",\n                              model_name == \"MA_mod\",\n                              dataset == \"blue tit\")\n\n# summary_output_params <- rlang::exprs(tidy_mod_summary, MA_fit_stats, mod_fit_stats)\n\nManyEcoEvo_viz %>% \n  filter(!!!filter_collinear) %>% \n  mutate(plot_data = map(tidy_mod_summary, \n                         .f = ~ dplyr::mutate(.x, \n                                            point_shape = \n                                              ifelse(stringr::str_detect(term, \"overall\"), \n                                                     \"diamond\", \n                                                     \"circle\"),\n                                            Parameter = \n                                              forcats::fct_reorder(term, \n                                                                   estimate) %>% \n                                              forcats::fct_reorder(., \n                                                                   point_shape,\n                                                                   .desc = TRUE))\n  ),\n  meta_analytic_mean = map_dbl(plot_data, \n                               ~ filter(.x, Parameter == \"overall\") %>% \n                                 pull(estimate))) %>% \n  select(plot_data, meta_analytic_mean) %>% \n  unnest(cols = c(\"plot_data\")) %>% \n  mutate(parameter_type = case_when(str_detect(Parameter, \"overall\") ~ \"mean\",\n                                    TRUE ~ \"study\")) %>% \n  arrange(desc(type)) %>% \n  mutate(type = forcats::as_factor(type)) %>% \n  group_by(type) %>% \n  arrange(desc(estimate),.by_group = TRUE) %>% \n  mutate(term = forcats::as_factor(term),\n         point_shape = case_when(str_detect(type, \"summary\") ~ \"mean\",\n                                 TRUE ~ \"study\")) %>% \n  plot_forest(intercept = TRUE, MA_mean = TRUE) +\n  theme(axis.text.x = element_text(size = 15), \n        axis.title.x = element_text(size = 15),\n        axis.text.y = element_blank()\n  ) +\n    scale_y_continuous(limits = c(-1.5, 0.5), \n                     breaks = c(-1.5, -1, -0.5, 0, 0.5) )\n```\n\n::: {.cell-output-display}\n![Forest plot of meta-analytic estimated effect-sizes $Z_{r}$, standard error and 95% confidence intervals of blue tit analyses with highly collinear analyses removed. The meta-analytic mean for the reduced subset is denoted by the black triangle, and a dashed vertical line, with error bars representing the 95% confidence interval. The solid black vertical line demarcates effect size of 0.](SM2_EffectSizeAnalysis_files/figure-html/fig-forest-plot-Zr-collinear-rm-subset-1.png){#fig-forest-plot-Zr-collinear-rm-subset width=672}\n:::\n:::\n\n\n\n\n### Out of sample predictions $y_i$\n\n#### Excluded analyses with constructed variables {#sec-excluded-yi}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby <- join_by(response_variable_name) # don't join on id_col: inc. other excl.\n\n# Analyst Constructed Variables\nall_constructed_vars <- \n  ManyEcoEvo %>% \n    pull(data, dataset) %>% \n    list_rbind(names_to = \"dataset\") %>% \n    filter(str_detect(response_variable_type, \"constructed\")) %>% \n    distinct(dataset,response_variable_name) %>% \n    drop_na() %>% \n    arrange()\n\n# Constructed Variables Included in the ManyAnalysts meta-analysis\n# (i.e. we have included them in the parameter tables)\nManyEcoEvo_yi_constructed_vars <-\n ManyEcoEvo:::analysis_data_param_tables %>% \n  distinct(variable, dataset) %>% \n  rename(response_variable_name = variable) %>% \n  semi_join(all_constructed_vars, by) %>% \n  filter(!str_detect(response_variable_name, \n                     \"average.proportion.of\")) # was excluded\n\nyi_constructed <-\n  ManyEcoEvo_yi_results %>% \n    pull(data, dataset) %>% \n    list_rbind(names_to = \"dataset\") %>% \n    filter(str_detect(response_variable_type, \"constructed\")) %>% \n    distinct(dataset, id_col, TeamIdentifier, response_variable_name) %>% \n    drop_na() \n\nexcluded_yi_constructed <- \n  ManyEcoEvo %>% \n  pull(data, dataset) %>% \n  list_rbind(names_to = \"dataset\") %>% \n  filter(str_detect(response_variable_type, \"constructed\"),\n         str_detect(exclusions_all, \"retain\")) %>% \n  distinct(dataset, id_col, TeamIdentifier, response_variable_name) %>% \n  drop_na() %>% \n  anti_join(yi_constructed, by) #rm response vars in yi_constructed\n\nn_dropped_analyses <- \n  excluded_yi_constructed %>% \n  n_distinct(\"id_col\")\n\nn_teams_w_dropped_analyses <- \n  excluded_yi_constructed %>% \n  group_by(TeamIdentifier) %>%  \n  count() %>% \n  n_distinct(\"TeamIdentifier\")\n```\n:::\n\n\n\n\nWe standardized the $y_i$ estimates and their standard errors for the blue tit analyses using the population mean and standard deviations of the corresponding dependent variable for that analysis, as shown in @eq-Z-VZ, using the function `ManyEcoEvo::Z_VZ_preds()`. Note that this is NOT the same process as standardizing the effect sizes $Z_r$. We used the mean and standard deviation of the relevant raw datasets as our 'population' parameters.\n\n$$\nZ_j = \\frac{\\mu_i-\\bar{x}_j}{\\text{SD}_j} \\\\\n\\\\\n{\\text{VAR}}_{Z_j} = \\frac{{\\text{SE}}_{\\mu_i}}{{\\text{SD}_j}} \\\\\n$$ {#eq-Z-VZ}\n\nWhere $\\mu$ is the population parameter taken from our original dataset for variable $i$, and $\\bar{x}_j$ and $\\text{SD}_j$ are the out of sample point estimate values supplied for analysis $j$. $\\text{SE}_{{\\mu}_{i}}$ is the standard error of the population mean for variable $i$, while ${\\text{VAR}}_{{Z}_{j}}$ and ${Z}_{j}$ are the standardized variance and mean estimate for analysis $j$. Note that for the response variables that were scaled-and-centered, or else mean-centred before model fitting, we do not need to standardise because these are already on the Z-scale. In doing so we make the assumption that analysts' data subsetting will have little effect on the outcomes. For some analyses of the blue tit dataset, analysts constructed their own unique response variables, which meant we needed to reconstruct these variables in order to calculate the population parameters. Unfortunately we were not able to re-construct all variables used by the analysts, as we were unable to reproduce the data required for their re-construction, e.g. we were unable to reproduce principal component analyses or fitted models for extracting residuals [@tbl-constructed-var-exclusions]. A total of 15 were excluded from out-of-sample meta-analysis, from 10 teams, including the following analysis identifiers: _Bruc-1-1-1_, _Clar-2-2-1_, _Clar-1-1-1_, _Batlow-1-1-1_, _Batlow-1-1-2_, _Bindoo-1-1-1_, _Bourke-1-1-1_, _Buchan-1-1-1_, _Arltung-4-4-1_, _Bargara-1-1-1_, _Bendigo-5-5-1_, _Booligal-3-3-1_, _Booligal-2-2-1_, _Booligal-4-4-1_ and _Booligal-5-5-1_.\n\n\n\n\n::: {#tbl-constructed-var-exclusions .cell tbl-cap='Analyst-constructed variables and their inclusion in meta-analyses of out-of-sample predictions, $y\\_i$.'}\n\n```{.r .cell-code}\nall_constructed_vars %>% \n  semi_join(ManyEcoEvo_yi_constructed_vars, by) %>% \n  mutate(included_in_yi = TRUE) %>% \n  bind_rows(\n    {\n      all_constructed_vars %>% \n        anti_join(ManyEcoEvo_yi_constructed_vars, by) %>% \n        mutate(included_in_yi = FALSE)\n    }\n  ) %>% \n  dplyr::mutate(included_in_yi = \n                  case_match(included_in_yi, \n                                            TRUE ~ \"check\", \n                                            FALSE ~ \"xmark\" ),\n                response_variable_name = \n                  gluedown::md_code(response_variable_name)) %>% \n  group_by(dataset) %>% \n  gt::gt() %>% \n  gt::cols_label(response_variable_name = \"Constructed Variable\",\n                 included_in_yi = gt::md(\"Variable reconstructed for meta-analysis?\")) %>%\n  gt::fmt_icon(included_in_yi) %>% \n  gt::tab_style(style = cell_text(style = \"italic\", transform = \"capitalize\"), \n                locations = cells_row_groups(groups = \"eucalyptus\")) %>%\n  gt::tab_style(style = cell_text(align = \"center\"), \n                locations = cells_body(columns = included_in_yi)) %>% \n  gt::tab_style(style = cell_text(align = \"left\"), \n                locations = cells_body(columns = response_variable_name)) %>% \n  gt::tab_style(style = cell_text(align = \"left\"), \n                locations = cells_column_labels(response_variable_name)) %>% \n  gt::tab_style(locations = cells_body(columns = response_variable_name), \n                     style = cell_text(size = \"small\")) %>% \n  gt::fmt_markdown(columns = response_variable_name) %>% \n  gt::opt_stylize(style = 6, color = \"gray\", add_row_striping = TRUE) %>% \n  gt::opt_row_striping(row_striping = TRUE) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"dzebohtplc\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#dzebohtplc table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#dzebohtplc thead, #dzebohtplc tbody, #dzebohtplc tfoot, #dzebohtplc tr, #dzebohtplc td, #dzebohtplc th {\n  border-style: none;\n}\n\n#dzebohtplc p {\n  margin: 0;\n  padding: 0;\n}\n\n#dzebohtplc .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#dzebohtplc .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#dzebohtplc .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#dzebohtplc .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#dzebohtplc .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#dzebohtplc .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#dzebohtplc .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#dzebohtplc .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #5F5F5F;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#dzebohtplc .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #5F5F5F;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#dzebohtplc .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#dzebohtplc .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#dzebohtplc .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#dzebohtplc .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#dzebohtplc .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#dzebohtplc .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n  vertical-align: middle;\n}\n\n#dzebohtplc .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#dzebohtplc .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#dzebohtplc .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: none;\n  border-top-width: 1px;\n  border-top-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D5D5D5;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D5D5D5;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#dzebohtplc .gt_stub {\n  color: #333333;\n  background-color: #D5D5D5;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D5D5D5;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dzebohtplc .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#dzebohtplc .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#dzebohtplc .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#dzebohtplc .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dzebohtplc .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #5F5F5F;\n}\n\n#dzebohtplc .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#dzebohtplc .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#dzebohtplc .gt_grand_summary_row {\n  color: #333333;\n  background-color: #D5D5D5;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dzebohtplc .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #5F5F5F;\n}\n\n#dzebohtplc .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #5F5F5F;\n}\n\n#dzebohtplc .gt_striped {\n  background-color: #F4F4F4;\n}\n\n#dzebohtplc .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #5F5F5F;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #5F5F5F;\n}\n\n#dzebohtplc .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#dzebohtplc .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dzebohtplc .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#dzebohtplc .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dzebohtplc .gt_left {\n  text-align: left;\n}\n\n#dzebohtplc .gt_center {\n  text-align: center;\n}\n\n#dzebohtplc .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#dzebohtplc .gt_font_normal {\n  font-weight: normal;\n}\n\n#dzebohtplc .gt_font_bold {\n  font-weight: bold;\n}\n\n#dzebohtplc .gt_font_italic {\n  font-style: italic;\n}\n\n#dzebohtplc .gt_super {\n  font-size: 65%;\n}\n\n#dzebohtplc .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#dzebohtplc .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#dzebohtplc .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#dzebohtplc .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#dzebohtplc .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#dzebohtplc .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#dzebohtplc .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#dzebohtplc .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#dzebohtplc div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"text-align: left;\" scope=\"col\" id=\"Constructed Variable\">Constructed Variable</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;VmFyaWFibGUgcmVjb25zdHJ1Y3RlZCBmb3IgbWV0YS1hbmFseXNpcz8=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;Variable reconstructed for meta-analysis?&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"VmFyaWFibGUgcmVjb25zdHJ1Y3RlZCBmb3IgbWV0YS1hbmFseXNpcz8=\"><div class='gt_from_md'><p>Variable reconstructed for meta-analysis?</p>\n</div></div></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"2\" class=\"gt_group_heading\" scope=\"colgroup\" id=\"blue tit\">blue tit</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"blue tit  response_variable_name\" class=\"gt_row gt_center\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YGRheV8xNF93ZWlnaHQvZGF5XzE0X3RhcnN1c19sZW5ndGhg\"><div class='gt_from_md'><p><code>day_14_weight/day_14_tarsus_length</code></p>\n</div></div></td>\n<td headers=\"blue tit  included_in_yi\" class=\"gt_row gt_left\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Check\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Check</title><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg></span></td></tr>\n    <tr><td headers=\"blue tit  response_variable_name\" class=\"gt_row gt_center gt_striped\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YGRheV8xNF93ZWlnaHQvKGRheV8xNF90YXJzdXNfbGVuZ3RoXjIpYA==\"><div class='gt_from_md'><p><code>day_14_weight/(day_14_tarsus_length^2)</code></p>\n</div></div></td>\n<td headers=\"blue tit  included_in_yi\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Check\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Check</title><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg></span></td></tr>\n    <tr><td headers=\"blue tit  response_variable_name\" class=\"gt_row gt_center\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YFNNSWA=\"><div class='gt_from_md'><p><code>SMI</code></p>\n</div></div></td>\n<td headers=\"blue tit  included_in_yi\" class=\"gt_row gt_left\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Xmark\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Xmark</title><path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/></svg></span></td></tr>\n    <tr><td headers=\"blue tit  response_variable_name\" class=\"gt_row gt_center gt_striped\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YGRheV8xNF90YXJzdXNfbGVuZ3RoX2dyb3VwX2RldmlhdGlvbmA=\"><div class='gt_from_md'><p><code>day_14_tarsus_length_group_deviation</code></p>\n</div></div></td>\n<td headers=\"blue tit  included_in_yi\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Xmark\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Xmark</title><path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/></svg></span></td></tr>\n    <tr><td headers=\"blue tit  response_variable_name\" class=\"gt_row gt_center\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YGRheV8xNF93ZWlnaHRfZ3JvdXBfZGV2aWF0aW9uYA==\"><div class='gt_from_md'><p><code>day_14_weight_group_deviation</code></p>\n</div></div></td>\n<td headers=\"blue tit  included_in_yi\" class=\"gt_row gt_left\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Xmark\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Xmark</title><path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/></svg></span></td></tr>\n    <tr><td headers=\"blue tit  response_variable_name\" class=\"gt_row gt_center gt_striped\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YFBDMS5kYXlfMTRfd2VpZ2h0LmRheV8xNF90YXJzdXNfbGVuZ3RoYA==\"><div class='gt_from_md'><p><code>PC1.day_14_weight.day_14_tarsus_length</code></p>\n</div></div></td>\n<td headers=\"blue tit  included_in_yi\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Xmark\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Xmark</title><path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/></svg></span></td></tr>\n    <tr><td headers=\"blue tit  response_variable_name\" class=\"gt_row gt_center\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YGRheV8xNF90YXJzdXNfbGVuZ3RoX2RldmlhdGlvbmA=\"><div class='gt_from_md'><p><code>day_14_tarsus_length_deviation</code></p>\n</div></div></td>\n<td headers=\"blue tit  included_in_yi\" class=\"gt_row gt_left\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Xmark\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Xmark</title><path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/></svg></span></td></tr>\n    <tr><td headers=\"blue tit  response_variable_name\" class=\"gt_row gt_center gt_striped\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YHJlc2lkdWFsX2RheTE0X3dlaWdodGA=\"><div class='gt_from_md'><p><code>residual_day14_weight</code></p>\n</div></div></td>\n<td headers=\"blue tit  included_in_yi\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Xmark\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Xmark</title><path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/></svg></span></td></tr>\n    <tr><td headers=\"blue tit  response_variable_name\" class=\"gt_row gt_center\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YHJlc2lkdWFsX2RheV8xNF93ZWlnaHRfbWFsZXNg\"><div class='gt_from_md'><p><code>residual_day_14_weight_males</code></p>\n</div></div></td>\n<td headers=\"blue tit  included_in_yi\" class=\"gt_row gt_left\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Xmark\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Xmark</title><path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/></svg></span></td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <th colspan=\"2\" class=\"gt_group_heading\" style=\"font-style: italic; text-transform: capitalize;\" scope=\"colgroup\" id=\"eucalyptus\">eucalyptus</th>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td headers=\"eucalyptus  response_variable_name\" class=\"gt_row gt_center gt_striped\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YGV1Y19zZGxnczBfMm1g\"><div class='gt_from_md'><p><code>euc_sdlgs0_2m</code></p>\n</div></div></td>\n<td headers=\"eucalyptus  included_in_yi\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Check\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Check</title><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg></span></td></tr>\n    <tr><td headers=\"eucalyptus  response_variable_name\" class=\"gt_row gt_center\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YGV1Y19zZGxnc19hbGxg\"><div class='gt_from_md'><p><code>euc_sdlgs_all</code></p>\n</div></div></td>\n<td headers=\"eucalyptus  included_in_yi\" class=\"gt_row gt_left\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Check\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Check</title><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg></span></td></tr>\n    <tr><td headers=\"eucalyptus  response_variable_name\" class=\"gt_row gt_center gt_striped\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YGV1Y19zZGxncz41MGNtYA==\"><div class='gt_from_md'><p><code>euc_sdlgs&gt;50cm</code></p>\n</div></div></td>\n<td headers=\"eucalyptus  included_in_yi\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Check\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Check</title><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg></span></td></tr>\n    <tr><td headers=\"eucalyptus  response_variable_name\" class=\"gt_row gt_center\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YHNtYWxsKjAuMjUrbWVkaXVtKjEuMjUrbGFyZ2UqMi41YA==\"><div class='gt_from_md'><p><code>small*0.25+medium*1.25+large*2.5</code></p>\n</div></div></td>\n<td headers=\"eucalyptus  included_in_yi\" class=\"gt_row gt_left\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Check\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Check</title><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg></span></td></tr>\n    <tr><td headers=\"eucalyptus  response_variable_name\" class=\"gt_row gt_center gt_striped\" style=\"text-align: left; font-size: small;\"><div data-qmd-base64=\"YGF2ZXJhZ2UucHJvcG9ydGlvbi5vZi5wbG90cy5jb250YWluaW5nLmF0LmxlYXN0Lm9uZS5ldWMuc2VlZGxpbmcub2YuYW55LnNpemVg\"><div class='gt_from_md'><p><code>average.proportion.of.plots.containing.at.least.one.euc.seedling.of.any.size</code></p>\n</div></div></td>\n<td headers=\"eucalyptus  included_in_yi\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\"><span style=\"white-space:nowrap;\"><svg aria-label=\"Xmark\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><title>Xmark</title><path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/></svg></span></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n#### Non-truncated $y_{i}$ meta-analysis forest plot\n\nBelow is the non-truncated version of @fig-euc-yi-forest-plot showing a forest plot of the out-of-sample predictions, $y_{i}$, on the response-scale (stem counts), for *Eucalyptus* analyses, showing the full error bars of all model estimates.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_forest_2 <- function(data, intercept = TRUE, MA_mean = TRUE, y_zoom = numeric(2L)){\n  if(MA_mean == FALSE){\n    data <- filter(data, study_id != \"overall\")\n  }\n  \n  plot_data <- data %>% \n    group_by(study_id) %>% \n    group_nest() %>% \n    hoist(data, \"estimate\",.remove = FALSE) %>% \n    hoist(estimate, y50 = 2) %>% \n    select(-estimate) %>% \n    unnest(data) %>% \n    arrange(desc(type)) %>% \n    mutate(type = forcats::as_factor(type)) %>% \n    group_by(type) %>% \n    arrange(desc(y50),.by_group = TRUE) %>% \n    mutate(study_id = forcats::as_factor(study_id),\n           point_shape = case_when(str_detect(type, \"summary\") ~ \"diamond\",\n                                   TRUE ~ \"circle\"))\n  \n  p <- ggplot(plot_data, aes(y = estimate, \n                        x =  study_id,\n                        ymin = conf.low, \n                        ymax = conf.high,\n                        # shape = type,\n                        shape = point_shape,\n                        colour = estimate_type\n                        )) +\n    geom_pointrange(position = position_dodge(width = 0.5)) +\n    ggforestplot::theme_forest() +\n    theme(axis.line = element_line(linewidth = 0.10, colour = \"black\"),\n          axis.line.y = element_blank(),\n          text = element_text(family = \"Helvetica\")) +\n    guides(shape = \"none\", colour = \"none\") +\n    coord_flip(ylim = y_zoom) +\n    labs(y = \"Model estimated out of sample predictions, stem counts\",\n         x = element_blank()) +\n    scale_y_continuous(breaks = scales::breaks_extended(10)) +\n    NatParksPalettes::scale_color_natparks_d(\"Glacier\") \n  \n  if(intercept == TRUE){\n    p <- p + geom_hline(yintercept = 0)\n  }\n  \n  if(MA_mean == TRUE){\n    p <- p +\n      geom_hline(aes(yintercept = plot_data %>%\n                       filter(type == \"summary\", estimate_type == \"y25\") %>%\n                       pluck(\"estimate\")),\n                 data = data,\n                 colour = \"#01353D\",\n                 linetype = \"dashed\") +\n      geom_hline(aes(yintercept = plot_data %>%\n                       filter(type == \"summary\", estimate_type == \"y50\") %>%\n                       pluck(\"estimate\")),\n                 data = data,\n                 colour = \"#088096\",\n                 linetype = \"dashed\") +\n      geom_hline(aes(yintercept = plot_data %>%\n                       filter(type == \"summary\", estimate_type == \"y75\") %>%\n                       pluck(\"estimate\")),\n                 data = data,\n                 colour = \"#58B3C7\" ,\n                 linetype = \"dashed\")\n  }\n  \n  print(p)\n}\n\n# ---- new code ----\n\neucalyptus_yi_plot_data <- \n  ManyEcoEvo_yi_viz %>% \n  filter(dataset == \"eucalyptus\", model_name == \"MA_mod\")  %>% \n  unnest(cols = tidy_mod_summary) %>%  \n  mutate(response_scale = list(log_back(estimate, std.error, 1000)), \n         .by = c(dataset, estimate_type, term, type), \n         .keep = \"used\") %>% \n  select(-estimate, -std.error) %>% \n  unnest_wider(response_scale) %>% \n  rename(estimate = mean_origin, conf.low = lower, conf.high = upper) %>% \n  nest(tidy_mod_summary = c(-dataset, -estimate_type)) %>% #extract euc data for plotting (on count scale, not log scale)\n  select(dataset, estimate_type, tidy_mod_summary) %>% \n  unnest(cols = tidy_mod_summary) %>% \n  rename(study_id = term) %>% \n  ungroup()\n\nmax_x_axis <- \n  eucalyptus_yi_plot_data %>% \n  pluck(\"conf.high\", max) %>% \n  round() + 10\n\neucalyptus_yi_plot_data %>% \n  plot_forest_2(MA_mean = T, y_zoom = c(0, max_x_axis)) +\n  theme(axis.text.y = element_blank())\n```\n\n::: {.cell-output-display}\n![Forest plot of meta-analytic estimated out of sample  predictions, $y_{i}$, on the response-scale (stem counts) for *Eucalyptus* analyses. Circles represent individual analysis estimates. Triangles represent the meta-analytic mean for each prediction scenario. Navy blue coloured points correspond to $y_{25}$ scenario, blue coloured points correspond to the $y_{50}$ scenario, while light blue points correspond to the $y_{75}$ scenario. Error bars are 95% confidence intervals. Outliers (i.e. observations with mean estimates more than 3SD above the population parameter mean, see @sec-excluded-yi) have been removed prior to model fitting.](SM2_EffectSizeAnalysis_files/figure-html/fig-euc-yi-forest-plot-full-1.png){#fig-euc-yi-forest-plot-full width=672}\n:::\n:::\n",
    "supporting": [
      "SM2_EffectSizeAnalysis_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}