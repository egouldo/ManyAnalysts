{
  "hash": "313aaaf46a58713e5713499941b2d157",
  "result": {
    "markdown": "---\ntitle: \"Effect Size Analysis\"\nformat: html\neditor: visual\ncode-fold: true\nauthor:\n  - name: Elliot Gould\n  - name: Hannah S Fraser\nexecute:\n  freeze: auto  # re-render only when source changes\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(targets)\nlibrary(withr)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(performance)\nlibrary(broom.mixed)\nlibrary(gt)\nlibrary(lme4)\nlibrary(MuMIn)\nlibrary(ManyAnalysts)\nlibrary(ggrepel)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwithr::with_dir(here::here(),\n                targets::tar_load(ManyEcoEvo_viz))\nwithr::with_dir(here::here(),\n                targets::tar_load(ManyEcoEvo_results))\nwithr::with_dir(here::here(),\n                targets::tar_load(ManyEcoEvo_yi))\n```\n:::\n\n\n\n## Meta-analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nzr_heterogeneity<-ManyEcoEvo_viz %>% \n    dplyr::filter(estimate_type == \"Zr\", \n                  model_name == \"MA_mod\", \n                  exclusion_set == \"complete\") %>% \n  bind_rows(ManyEcoEvo_viz %>% \n              dplyr::filter(exclusion_set == \"complete-rm_outliers\",\n                            estimate_type == \"Zr\", \n                            model_name == \"MA_mod\",\n                            publishable_subset == \"All\"))  %>% \n  ungroup() %>% \n  select(dataset, \n         publishable_subset, \n         exclusion_set,\n         estimate_type,\n         mod_fit_stats,\n         MA_fit_stats) %>% \n  unnest(cols = c(mod_fit_stats,\n         MA_fit_stats)) %>% \n  group_by(dataset, \n           estimate_type, \n           exclusion_set,\n           publishable_subset) %>% \n  pivot_longer(cols = -c(dataset, \n                         estimate_type, \n                         exclusion_set,\n                         publishable_subset)) %>% \n  mutate(publishable_subset = \n           case_when(publishable_subset == \"All\" ~ \n                       \"All analyses\",\n                     publishable_subset == \"data_flawed\" ~ \n                       \"Analyses receiving at least one 'Unpublishable' rating removed\",\n                     publishable_subset == \"data_flawed_major\" ~ \n                       \"Analyses receiving at least one 'Unpublishable' and or 'Major Revisions' rating removed\",\n                     TRUE ~ \"\"),\n         exclusion_set = \n           case_when(exclusion_set == \"complete\" ~ \"No\",\n                     TRUE ~ \"Yes\")) %>% \n  pivot_wider(names_from = name) %>% \n  ungroup \n```\n:::\n\n::: {#tbl-effects-heterogeneity-sm .cell tbl-cap='Heterogeneity in the estimated effects and other variance components for meta-analyses fit to full dataset with conservative exclusions, and to the same dataset with outliers removed. ${\\tau}_{1}^{2}$ corresponds to the variance for random effect `TeamIdentifier` and  ${\\tau}_{2}^{2}$ corresponds to the variance for the random effect `study_id`, nested under `TeamIdentifier`. ${N}_{Obs}$ is the number of total observations in the fitted model. ${I^2}_{Total}$ is the total heterogeneity not attributable to sampling error, ${I^2}_{TeamIdentifier}$ is the heterogeneity due to differences between `TeamIdentifier` and ${I^2}_{TeamIdentifier}$ is the heterogeneity attributable to between-`study_id` differences. The ${Q}_{E}$ test-statistic is the test for heterogeneity.'}\n\n```{.r .cell-code}\nzr_heterogeneity %>% \n  select(-estimate_type, -AIC, -BIC, -TAU2, -contains(\"Omnibus\")) %>% \n  mutate(exclusion_set = case_when(exclusion_set == \"Yes\" ~ \", Outliers Removed\",\n                                   exclusion_set == \"No\" ~ \"\",\n                                   TRUE ~ exclusion_set)) %>% \n  unite(\"data_subset\", publishable_subset, exclusion_set, sep = \"\", remove = TRUE) %>% \n  rowwise() %>% \n  mutate(tau_total = sum(sigma2_1, sigma2_2)) %>% \n  relocate(tau_total, .after = starts_with(\"sigma\")) %>% \n  group_by(data_subset) %>% \n  arrange(data_subset) %>% \n  gt::gt() %>% \n  gt::fmt_number(columns = \n                   c(-\"dataset\", \n                     -\"p_CochransQ\",\n                     -\"dataset\",\n                     -\"data_subset\",\n                     -starts_with(\"I2\")),\n                 decimals = 2) %>% \n  gt::fmt(columns = starts_with(\"p_CochransQ\"), \n          fns =  function(x) gtsummary::style_pvalue(x, prepend_p = TRUE)) %>% \n  gt::fmt_percent(columns = \"I2_Total\", scale_values = FALSE, decimals = 3) %>% \n  gt::fmt_percent(columns = starts_with(\"I2_TeamIdentifier\"), scale_values = FALSE, decimals = 2) %>% \n  gt::opt_stylize(style = 6, color = \"gray\") %>% \n  gt::cols_merge(columns = c(CochransQ, p_CochransQ, df_error),\n                 pattern = \"Q({3})={1}, {2}\") %>% \n  gt::cols_label(dataset=\"Dataset\",\n                 I2_Total = \"$${I^2}_{Total}$$\",\n                 I2_TeamIdentifier = \"$${I^2}_{TeamIdentifier}$$\",\n                 `I2_TeamIdentifier/study_id` = \"$${I^2}_{TeamIdentifier, study\\\\_id}$$\" ,\n                 sigma2_1 = \"$${\\\\tau}_{1}^{2}$$\",\n                 sigma2_2 = \"$${\\\\tau}_{2}^{2}$$\",\n                 CochransQ = \"$${Q}_{E}$$\",\n                 tau_total = \"$${\\\\tau}_{total}^{2}$$\")\n```\n\n::: {.cell-output-display}\n\\begin{longtable}{lrrrrrrr}\n\\toprule\nDataset & \\$\\$\\{Q\\}\\_\\{E\\}\\$\\$ & \\$\\$\\{\\textbackslash{}tau\\}\\_\\{1\\}\\textasciicircum{}\\{2\\}\\$\\$ & \\$\\$\\{\\textbackslash{}tau\\}\\_\\{2\\}\\textasciicircum{}\\{2\\}\\$\\$ & \\$\\$\\{\\textbackslash{}tau\\}\\_\\{total\\}\\textasciicircum{}\\{2\\}\\$\\$ & \\$\\$\\{I\\textasciicircum{}2\\}\\_\\{Total\\}\\$\\$ & \\$\\$\\{I\\textasciicircum{}2\\}\\_\\{TeamIdentifier\\}\\$\\$ & \\$\\$\\{I\\textasciicircum{}2\\}\\_\\{TeamIdentifier, study\\textbackslash{}\\_id\\}\\$\\$ \\\\ \n\\midrule\n\\multicolumn{8}{l}{All analyses} \\\\ \n\\midrule\nblue tit & Q($130.00$)=$7,632.16$, p<0.001 & $0.04$ & $0.05$ & $0.09$ & $97.732\\%$ & $40.11\\%$ & $57.63\\%$ \\\\ \neucalyptus & Q($78.00$)=$2,526.23$, p<0.001 & $0.02$ & $0.25$ & $0.27$ & $98.589\\%$ & $6.88\\%$ & $91.71\\%$ \\\\ \n\\midrule\n\\multicolumn{8}{l}{All analyses, Outliers Removed} \\\\ \n\\midrule\nblue tit & Q($126.00$)=$3,038.22$, p<0.001 & $0.05$ & $0.02$ & $0.07$ & $97.030\\%$ & $66.90\\%$ & $30.13\\%$ \\\\ \neucalyptus & Q($74.00$)=$208.31$, p<0.001 & $0.00$ & $0.01$ & $0.01$ & $66.193\\%$ & $19.27\\%$ & $46.93\\%$ \\\\ \n\\midrule\n\\multicolumn{8}{l}{Analyses receiving at least one 'Unpublishable' and or 'Major Revisions' rating removed} \\\\ \n\\midrule\nblue tit & Q($31.00$)=$5,042.62$, p<0.001 & $0.01$ & $0.13$ & $0.14$ & $98.718\\%$ & $5.17\\%$ & $93.55\\%$ \\\\ \neucalyptus & Q($12.00$)=$51.64$, p<0.001 & $0.03$ & $0.00$ & $0.03$ & $88.915\\%$ & $88.91\\%$ & $0.00\\%$ \\\\ \n\\midrule\n\\multicolumn{8}{l}{Analyses receiving at least one 'Unpublishable' rating removed} \\\\ \n\\midrule\nblue tit & Q($108.00$)=$6,960.77$, p<0.001 & $0.03$ & $0.05$ & $0.08$ & $97.601\\%$ & $38.10\\%$ & $59.50\\%$ \\\\ \neucalyptus & Q($54.00$)=$227.87$, p<0.001 & $0.01$ & $0.01$ & $0.01$ & $79.741\\%$ & $28.32\\%$ & $51.42\\%$ \\\\ \n\\bottomrule\n\\end{longtable}\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![Orchard plot of meta-analytic model fitted to all eucalyptus analyses with a fixed effect for categorical peer-review ratings, and random effects for analyst ID and reviewer ID. Black circles denote coefficient mean for each categorical publishability rating. *Insert value for group means.* Thick error bars represent 95% CI and whiskers indicate 95% CI. effect sizes are represented by circles and their size corresponds to the precision of the estimate.](SM2_EffectSizeAnalysis_files/figure-pdf/fig-euc-cat-ratings-MA-1.pdf){#fig-euc-cat-ratings-MA}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![Forest plot of meta-analytic estimated out of sample  predictions, $y_{i}$, on the response-scale (stems counts), for eucalypt analyses. Circles represent individual analysis estimates. Triangles represent the meta-analytic mean for each prediction scenario. Navy blue coloured points correspond to $y_{25}$ scenario, blue coloured points correspond to the $y_{50}$ scenario, while light blue points correspond to the $y_{75}$ scenario. Error bars are 95% confidence intervals. Outliers (observations more than 2SD above the mean) have been removed prior to model fitting.](SM2_EffectSizeAnalysis_files/figure-pdf/fig-euc-yi-forest-plot-full-1.pdf){#fig-euc-yi-forest-plot-full}\n:::\n:::\n\n\n\n## Subsetting Analysis\n\n\n\n::: {#tbl-Zr-exclusion-subsetting .cell tbl-cap='Estimated mean value of the standardised corellation coefficient, and its standard error, 95% Confidence Intervals, for different degrees of conservatism in exclusion.'}\n\n```{.r .cell-code}\nManyEcoEvo_viz %>% \n    dplyr::filter(estimate_type == \"Zr\", \n                  model_name == \"MA_mod\") %>% \n  hoist(tidy_mod_summary) %>% \n  unnest(tidy_mod_summary)%>% \n  select(dataset, \n         exclusion_set, \n         estimate, \n         std.error, \n         statistic, \n         p.value, \n         publishable_subset,\n         starts_with(\"conf\")) %>% \n  filter(publishable_subset == \"All\") %>% \n  mutate(exclusion_set = \n           case_when(exclusion_set == \"complete\" ~ \n                       \"No outlier removal, conservative exclusions\",\n                     exclusion_set == \"complete-rm_outliers\" ~ \n                       \"Outliers removed, conservative exclusions\",\n                     exclusion_set == \"partial\" ~ \n                       \"Additional exclusions, no outlier removal\",\n                     TRUE ~ \"Additional exclusions, outlier removal\")) %>% \ngroup_by(exclusion_set) %>% \n  gt::gt() %>% \n  gt::opt_stylize(style = 6, color = \"gray\") %>% \n  gt::fmt(columns = \"p.value\",\n          fns = function(x) gtsummary::style_pvalue(x, prepend_p = TRUE)) %>% \n  gt::fmt_number(columns = c(-p.value, -dataset)) %>% \n  gt::cols_label(estimate = gt::md(\"$$\\\\hat\\\\mu$$\"), \n                 std.error = gt::md(\"$$SE[\\\\hat\\\\mu]$$\"),\n                 conf.low = gt::md(\"95\\\\%CI\")) %>% \n  gt::cols_merge(columns = starts_with(\"conf\"), \n                 pattern = \"[{1},{2}]\") %>% \n  gt::cols_move(columns = conf.low, after = std.error) \n```\n\n::: {.cell-output-display}\n\\begin{longtable}{lrrrrrl}\n\\toprule\ndataset & $$\\hat\\mu$$ & $$SE[\\hat\\mu]$$ & 95\\%CI & statistic & p.value & publishable\\_subset \\\\ \n\\midrule\n\\multicolumn{7}{l}{No outlier removal, conservative exclusions} \\\\ \n\\midrule\nblue tit & $-0.35$ & $0.03$ & [$-0.41$,$-0.28$] & $-10.49$ & p<0.001 & All \\\\ \neucalyptus & $-0.09$ & $0.06$ & [$-0.22$,$0.03$] & $-1.47$ & p=0.14 & All \\\\ \n\\midrule\n\\multicolumn{7}{l}{Additional exclusions, no outlier removal} \\\\ \n\\midrule\nblue tit & $-0.36$ & $0.03$ & [$-0.42$,$-0.29$] & $-10.50$ & p<0.001 & All \\\\ \neucalyptus & $-0.11$ & $0.07$ & [$-0.24$,$0.03$] & $-1.55$ & p=0.12 & All \\\\ \n\\midrule\n\\multicolumn{7}{l}{Outliers removed, conservative exclusions} \\\\ \n\\midrule\nblue tit & $-0.35$ & $0.03$ & [$-0.42$,$-0.29$] & $-10.95$ & p<0.001 & All \\\\ \neucalyptus & $-0.03$ & $0.01$ & [$-0.06$,$0.00$] & $-2.23$ & p=0.026 & All \\\\ \n\\midrule\n\\multicolumn{7}{l}{Additional exclusions, outlier removal} \\\\ \n\\midrule\nblue tit & $-0.36$ & $0.03$ & [$-0.43$,$-0.30$] & $-11.09$ & p<0.001 & All \\\\ \neucalyptus & $-0.04$ & $0.02$ & [$-0.07$,$-0.01$] & $-2.52$ & p=0.012 & All \\\\ \n\\bottomrule\n\\end{longtable}\n\n:::\n:::\n\n\n\n## Outlier Analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_forest <- function(data, intercept = TRUE, MA_mean = TRUE ){\n  if(MA_mean == FALSE){\n    data <- filter(data, term != \"Overall\")\n  }\n  \n    p <- ggplot(data, aes(y = term, \n                        x =  estimate, \n                        ymin = conf.low, \n                        ymax = conf.high,\n                        # shape = point_shape,\n                        colour = parameter_type)) +\n    geom_pointrange() +\n    ggforestplot::theme_forest() +\n    theme(axis.line = element_line(size = 0.10, colour = \"black\"),\n          axis.line.y = element_blank(),\n          text = element_text(family = \"Helvetica\"),\n          axis.text.y = element_blank()) +\n    guides(shape = \"none\", colour = \"none\") +\n    coord_flip() +\n    labs(y = \"Standardised Effect Size, Zr\",\n         x = element_blank()) +\n    scale_y_continuous(breaks = c(-4,-3,-2,-1,0,1),\n                       minor_breaks = seq(from = -4.5, to = 1.5, by = 0.5)) +\n    NatParksPalettes::scale_color_natparks_d(\"Glacier\")\n    \n    if(intercept == TRUE){\n      p <- p + geom_hline(yintercept = 0)\n    }\n    if(MA_mean == TRUE){\n      p <- p + geom_hline(aes(yintercept = meta_analytic_mean), \n                          data = data,\n                          colour = \"#01353D\", \n                          linetype = \"dashed\")\n    }\n    \n  return(p)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncomplete_euc_data <- \n  ManyEcoEvo_viz %>% \n  filter(exclusion_set == \"complete\", \n         estimate_type == \"Zr\", \n         model_name == \"MA_mod\",\n         dataset == \"eucalyptus\",\n         publishable_subset == \"All\") %>% \n  select(model) %>% \n  mutate(plot_data = map(model, \n                         .f = ~ broom::tidy(.x, \n                                            conf.int = TRUE, \n                                            include_studies = TRUE) %>% \n                           dplyr::mutate(point_shape = \n                                           ifelse(stringr::str_detect(term, \"overall\"), \n                                                  \"diamond\", \n                                                  \"circle\"),\n                                         Parameter = \n                                           forcats::fct_reorder(term, \n                                                                estimate) %>% \n                                           forcats::fct_reorder(., \n                                                                point_shape,\n                                                                .desc = TRUE))\n  ),\n  meta_analytic_mean = map_dbl(plot_data, \n                               ~ filter(.x, Parameter == \"overall\") %>% \n                                 pull(estimate))) %>% \n  select(plot_data, meta_analytic_mean) %>% \n  unnest(cols = c(\"plot_data\")) %>% \n  mutate(parameter_type = case_when(str_detect(Parameter, \"overall\") ~ \"mean\",\n                                    TRUE ~ \"study\"))\n\nmin_outlier_euc <- complete_euc_data %>% \n  filter(type == \"study\") %>% \n  slice_min(estimate, n = 3) %>% \n  pull(term)\n\nsample_size_euc_Zr <- ManyEcoEvo_results %>% \n    filter(exclusion_set == \"complete\", dataset == \"eucalyptus\") %>% \n    pluck(\"data\", 1) %>% \n    select(id_col, sample_size) %>% \n    rename(term = id_col) %>% \n    mutate(sample_size = as.numeric(sample_size))\n\nmean_n_euc_Zr <- sample_size_euc_Zr %>% \n  drop_na(sample_size) %>% \n  pull(sample_size) %>% \n  mean() %>% \n  round(2)\n\nN_outliers_Zr_euc <- sample_size_euc_Zr %>% \n  filter(term %in% min_outlier_euc) %>% \n   arrange(desc(sample_size))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbt_complete_data <- ManyEcoEvo_viz %>% \n  filter(exclusion_set == \"complete\", \n         estimate_type == \"Zr\", \n         model_name == \"MA_mod\",\n         dataset == \"blue tit\",\n         publishable_subset == \"All\") %>% \n  select(model) %>% \n  mutate(plot_data = map(model, \n                         .f = ~ broom::tidy(.x, \n                                             conf.int = TRUE, \n                                             include_studies = TRUE)%>% \n                           dplyr::mutate(point_shape = \n                                           ifelse(stringr::str_detect(term, \"overall\"), \n                                                  \"diamond\", \n                                                  \"circle\"),\n                                         Parameter = \n                                           forcats::fct_reorder(term, \n                                                                estimate) %>% \n                                           forcats::fct_reorder(., \n                                                                point_shape,\n                                                                .desc = TRUE))\n  ),\n  meta_analytic_mean = map_dbl(plot_data, \n                               ~ filter(.x, Parameter == \"overall\") %>% \n                                 pull(estimate))) %>% \n  select(plot_data, meta_analytic_mean) %>% \n  unnest(cols = c(\"plot_data\")) %>% \n  mutate(parameter_type = case_when(str_detect(Parameter, \"overall\") ~ \"mean\",\n                                    TRUE ~ \"study\")) \n\n\n\nmax_outlier_bt <- bt_complete_data %>% \n  filter(type == \"study\") %>% \n  slice_max(estimate) %>% \n  pull(term)\n\nmin_outlier_bt <- bt_complete_data %>% \n  filter(type == \"study\") %>% \n  slice_min(estimate) %>% \n  pull(term)\n\nkey_vars <- \n  ManyEcoEvo_results %>% \n  filter(exclusion_set == \"complete\", dataset == \"blue tit\") %>% \n  pluck(\"data\", 1) %>% \n  filter(id_col %in% c(max_outlier_bt, min_outlier_bt)) %>% \n  select(id_col, TeamIdentifier, response_variable_name,test_variable, sample_size) %>% \n  mutate(response_variable_name  = str_remove(response_variable_name,\n                                              \"model 1: \"))\n\ncovars <- \n  ManyEcoEvo_results %>% \n  filter(exclusion_set == \"complete\", dataset == \"blue tit\") %>% \n  pluck(\"diversity_data\", 1) %>% \n  filter(id_col %in% c(max_outlier_bt, min_outlier_bt)) %>% \n  pivot_longer(-c(id_col, dataset)) %>% \n  drop_na(value) %>% \n  select(-dataset, -value) %>% \n  rename(variable = name) %>% \n  mutate(name = \"covariates\")\n\nmodel_vars <- \n  key_vars %>% \n  select(-sample_size) %>% \n  pivot_longer(-id_col) %>% \n  rename(variable = value) %>% \n  bind_rows(covars) %>% \n  rename(variable_type = name) %>% \n  pivot_wider(names_from = id_col, values_from = variable) %>% \n  unnest() \n```\n:::\n\n::: {#tbl-shared-covars-bt .cell tbl-cap='Shared covariates across bleu tit analyses yielding highest and lowest effect-size outliers.'}\n\n```{.r .cell-code}\nmodel_vars %>%  \n  mutate(shared_vars = case_when(.data$`R_2EAXdnsMi6ugMYh-2-2-1` == .data$`R_2EAXdnsMi6ugMYh-1-1-1` ~ TRUE, \n                                 TRUE ~ FALSE)) %>%  \n  mutate(var_name = case_when(shared_vars == TRUE ~ .data$`R_2EAXdnsMi6ugMYh-2-2-1`)) %>% \n    mutate(across(starts_with(\"R_\"),.fns = ~case_when(shared_vars == TRUE ~ rlang::na_chr, TRUE ~ .x))) %>% \n  select(-shared_vars, -variable_type) %>% \n  gt::gt() %>% \n  gt::cols_move(columns = gt::ends_with(\"1-1\"), \n                after = var_name) %>% \n  gt::cols_label(var_name = \"\") %>% \n  gt::sub_missing(missing_text = \"\") %>% \n  gtExtras::gt_theme_nytimes() %>% \n  gt::tab_style(style = gt::cell_text(size = gt::pct(70)),\n                locations = gt::cells_body()) %>% \n  gt::tab_style(style = gt::cell_borders(sides = \"all\", weight = NULL),locations = gt::cells_body()) %>% \n  gt::tab_options(table.font.size = gt::pct(70))\n```\n\n::: {.cell-output-display}\n\\begin{longtable}{lll}\n\\toprule\nR\\_2EAXdnsMi6ugMYh-2-2-1 &  & R\\_2EAXdnsMi6ugMYh-1-1-1 \\\\ \n\\midrule\n & R\\_2EAXdnsMi6ugMYh &  \\\\ \nday\\_14\\_tarsus\\_length &  & day\\_14\\_weight \\\\ \n & rear\\_Cs\\_at\\_start\\_of\\_rearing &  \\\\ \n & hatch\\_nest\\_breed\\_ID &  \\\\ \n & hatch\\_nest\\_CS &  \\\\ \n & hatch\\_nest\\_OH &  \\\\ \n & d0\\_hatch\\_nest\\_brood\\_size &  \\\\ \n & rear\\_nest\\_trt &  \\\\ \n & rear\\_nest\\_CS &  \\\\ \n & rear\\_Cs\\_at\\_start\\_of\\_rearing &  \\\\ \n & relatedness &  \\\\ \n\\bottomrule\n\\end{longtable}\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbt_complete_data %>% \n  plot_forest(intercept = TRUE, MA_mean = TRUE) +\n  ggrepel::geom_label_repel(mapping = aes(y = estimate, \n                                x =  Parameter, \n                                label = str_split(term, \"-\") %>% flatten_chr() %>% pluck(1)\n  ),\n  data          = subset(bt_complete_data, \n                         term %in% c(max_outlier_bt, min_outlier_bt)),\n  # nudge_y       =  subset(bt_complete_data, \n                          # term %in% c(max_outlier_bt, min_outlier_bt))$Coefficient,\n  # nudge_x = 80,\n  size          = 8,\n  box.padding   = 1.5,\n  point.padding = 0.5,\n  force         = 100,\n  segment.size  = 0.8,\n  segment.color = \"grey50\",\n  direction     = \"x\")\n```\n:::\n",
    "supporting": [
      "SM2_EffectSizeAnalysis_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{\"knit_meta_id\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"tbl-effects-heterogeneity-sm\",\"tbl-effects-heterogeneity-sm\",\"tbl-effects-heterogeneity-sm\",\"tbl-Zr-exclusion-subsetting\",\"tbl-Zr-exclusion-subsetting\",\"tbl-Zr-exclusion-subsetting\",\"tbl-shared-covars-bt\",\"tbl-shared-covars-bt\",\"tbl-shared-covars-bt\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"caption\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"caption\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"caption\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]}]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}