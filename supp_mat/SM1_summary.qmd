---
title: "Summarising Variation Among Analysis Specifications"
format: html
editor: visual
code-fold: true
author:
  - name: Elliot Gould
  - name: Hannah S Fraser
execute:
  freeze: auto  # re-render only when source changes
bibliography: ../ms/references.bib
number-sections: true
tbl-cap-location: top
editor_options: 
  chunk_output_type: console
---

```{r load-libs, include=TRUE,eval=TRUE,message=FALSE}
library(tidyverse)
library(targets)
library(withr)
library(here)
library(metafor)
library(ManyEcoEvo)
library(tidyverse)
library(broom)
library(gt)
library(specr)
library(colorspace)
library(ggthemes)
library(ggh4x)
library(showtext)

set.seed(1234)
# extrafont::font_install("Lato")
```

```{r descriptive-munging-2, eval=TRUE,include=FALSE, eval=TRUE}
# ----- Using complete objects in 'ManyEcoEvo' -----

Table1 <- # Teams, analyses and model types
  ManyEcoEvo::ManyEcoEvo_study_summary %>% 
  filter(subset_name != "all") %>% 
  select(subset_name, model_type_summary) %>% 
  unnest(cols = model_type_summary)

Table2 <- # model composition
  ManyEcoEvo::ManyEcoEvo_study_summary %>% 
    filter(subset_name != "all") %>% 
    select(subset_name, model_term_summary) %>% 
    unnest(cols = model_term_summary)

Table3 <-  # choice of variables
  ManyEcoEvo::ManyEcoEvo_study_summary %>% 
  filter(subset_name != "all") %>% 
  select(subset_name, variable_count_summary ) %>% 
  unnest(cols = variable_count_summary)
```

## Summary Statistics

### Number of analyses of different types

As described in the summary statistics section of the manuscript, `r Table1[1,4]` teams submitted `r Table1[1,3]` $Z_r$ model estimates and `r Table1[2,4]` teams submitted `r Table1[2,3]` $y_i$ predictions for the blue tit dataset. Similarly, `r Table1[3,4]` submitted `r Table1[3,3]` $Z_r$ model estimates and `r Table1[4,4]` teams submitted `r Table1[4,3]`$y_i$ predictions for the *Eucalytpus* dataset. The majority of the blue tit analyses specified normal error distributions and were non-Bayesian mixed effects models. Analyses of the *Eucalyptus* dataset rarely specified normal error distributions, likely because the response variable was in the form of counts. Mixed effects models were also common for *Eucalytpus* analyses (@tbl-Table1).

```{r}
#| label: tbl-Table1
#| tbl-cap: "Summary of the number of anaysis teams, total analyses, models with normal error distributions, mixed effects models, and models developed with Bayesian statistical methods for effect size analyses only ($Z_r$) and out-of-sample prediction only ($y_i$)."

Table1 %>% 
  rename_with(~ str_remove(., "sum_")) %>% 
  group_by(dataset) %>% 
  gt::gt(rowname_col = "subset") %>% 
  gt::cols_label(dataset = "dataset",
                 subset = "Subset",
                 totalanalyses = "No. Analyses",
                 teams = "No. Teams",
                 linear = "Normal Distribution",
                 mixed = "Mixed Effect") %>% 
  gt::sub_values(columns = subset, values = c("effects"), 
                 replacement = gt::md("$$Z_r$$")) %>% 
  gt::sub_values(columns = subset, values = c("predictions"), 
                 replacement = gt::md("$$y_i$$")) %>% 
  gt::sub_values(columns = subset, values = c("all"), 
                 replacement = gt::md("All analyses")) %>% 
  gt::opt_stylize(style = 6, color = "gray") %>% 
  gt::text_transform(fn = function(x) ifelse(x == "eucalyptus", 
                                             gt::md(paste("*Eucalyptus*")), x),
                     locations = gt::cells_row_groups()) %>% 
  gt::text_transform(fn = function(x) map(x, gt::md), 
                     locations = gt::cells_row_groups()) %>% 
  gt::as_raw_html()
```

### Model composition

The composition of models varied substantially (@tbl-Table2) in regards to the number of fixed and random effects, interaction terms and the number of data points used. For the blue tit dataset, models used up to `r Table2[1,7]` fixed effects, `r Table2[6,7]` random effects, and `r Table2[3,7]` interaction terms and had sample sizes ranging from `r Table2[7,6]` to `r Table2[7,7]` For the Eucalyptus dataset models had up to `r Table2[9,7]` fixed effects, `r Table2[13,7]` random effects, `r Table2[11,7]` interaction terms and sample sizes ranging from `r Table2[15,6]` to `r Table2[15,7]`.

```{r}
#| label: tbl-Table2
#| tbl-cap: "Mean, standard deviation and range of number of fixed and random variables and interaction terms used in models and sample size used. Repeated for effect size analyses only ($Z_r$) and out-of-sample prediction only ($y_i$)."

Table2 %>% 
  rename(SD = sd) %>%   
  group_by(variable) %>% 
  pivot_wider(
    names_from = dataset,
    names_sep = ".",
    values_from = c(mean, SD, min, max)
  ) %>% 
  gt::gt(rowname_col = "subset") %>% 
  gt::tab_spanner_delim(delim = ".") %>% 
  gt::fmt_scientific(columns = c(contains("mean"), contains("SD")),
                     decimals = 2) %>% 
  gt::cols_label_with(fn = Hmisc::capitalize) %>% 
  gt::tab_style(
    style = gt::cell_text(transform = "capitalize"),
    locations = gt::cells_column_spanners()
  ) %>% 
  gt::cols_label_with(c(contains("Eucalyptus")), 
                      fn = ~ gt::md(paste0("*",.x, "*"))) %>% 
  gt::sub_values(columns = subset, values = c("effects"), 
                 replacement = gt::md("$$Z_r$$")) %>% 
  gt::sub_values(columns = subset, values = c("predictions"), 
                 replacement = gt::md("$$y_i$$")) %>% 
  gt::sub_values(columns = subset, values = c("all"), 
                 replacement = gt::md("All analyses")) %>% 
  gt::opt_stylize(style = 6, color = "gray") %>% 
  gt::as_raw_html()
```

### Choice of variables

The choice of variables also differed substantially among analyses (@tbl-Table3) and some analysts constructed new variables that transformed or aggregated one or more existing variables. The blue tit dataset had a total of `r length(unique(var_names[[1,2]][[1]]))` candidate variables, each of which were used in at least one analysis. These variables were included in a mean of `r round(Table3[[1,3]],digits=2)` $Z_r$ analyses (range `r Table3[[1,5]]`- `r Table3[[1,6]]`). The *Eucalyptus* dataset had a total of `r length(unique(var_names[[2,2]][[1]]))` candidate variables, all of which were used in at least one analysis. The variables in the *Eucalyptus* dataset were included in a mean of `r round(Table3[[2,3]],digits=2)` $Z_r$ analyses (range `r Table3[[2,5]]`-`r Table3[[2,6]]`).

```{r}
#| label: tbl-Table3
#| tbl-cap: "Mean, SD, minimum and maximum number of analyses in which each variable was used, for effect size analyses only ($Z_r$), out-of-sample prediction only ($y_i$), using the full dataset."
#table 3 - summary of mean, sd and range for the number of analyses in which each variable was used
Table3 %>% 
  rename(SD = sd) %>% 
  pivot_wider(
    names_from = dataset,
    names_sep = ".",
    values_from = c(mean, SD, min, max)
  ) %>% 
  ungroup %>% 
  gt::gt(rowname_col = "subset") %>% 
  gt::tab_spanner_delim(delim = ".") %>% 
  gt::fmt_scientific(columns = c(contains("mean"), contains("SD")),
                     decimals = 2) %>% 
  gt::cols_label_with(fn = Hmisc::capitalize) %>% 
  gt::cols_label_with(c(contains("Eucalyptus")), fn = ~ gt::md(paste0("*",.x, "*"))) %>% 
  gt::sub_values(columns = subset, values = c("effects"), 
                 replacement = gt::md("$$Z_r$$")) %>% 
  gt::sub_values(columns = subset, values = c("predictions"), 
                 replacement = gt::md("$$y_i$$")) %>% 
  gt::sub_values(columns = subset, values = c("all"), 
                 replacement = gt::md("All analyses")) %>% 
  gt::opt_stylize(style = 6, color = "gray") %>% 
  tab_style(
    style = cell_text(transform = "capitalize"),
    locations = cells_column_spanners()
  )
```

## Effect Size Specification Analysis

We used a specification curve [@simonsohn2015] to look for relationships between $Z_r$ values and several modeling decisions, including the choice of independent and dependent variable, transformation of the dependent variable, and other features of the models that produced those $Z_r$ values (@fig-specr-bt, @fig-specr-euc). Each effect can be matched to the model features that produced it by following a vertical line down the figure.

### Blue tit

We observed few clear trends in the blue tit specification curve (@fig-specr-bt). The clearest trend was for the independent variable 'contrast: reduced broods vs. unmanipulated broods' to produce weak or even positive relationships, but never strongly negative relationships. The biological interpretation of this pattern is that nestlings in reduced broods averaged similar growth to nestlings in unmanipulated broods, and sometimes the nestlings in reduced broods even grew less than the nestlings in unmanipulated broods. Therefore, it may be that competition limits nestling growth primarily when the number of nestlings exceeds the clutch size produced by the parents, and not in unmanipulated broods. The other relatively clear trend was that the strongest negative relationships were never based on the independent variable 'contrast: unmanipulated broods vs. enlarged broods'. These observations demonstrate the potential value of specification curves.

```{r calc_MA_mod_coefs-2, eval=TRUE, cache = FALSE, eval = TRUE, warning=FALSE, message = FALSE}
# knitr::read_chunk(here::here("index.qmd"), labels = "calc_MA_mod_coefs")
#TODO why is here??
coefs_MA_mod <- bind_rows( ManyEcoEvo_viz %>%
                             filter(model_name == "MA_mod",
                                    exclusion_set == "complete",
                                    expertise_subset == "All"),
                           ManyEcoEvo_viz %>%
                             filter(model_name == "MA_mod",
                                    exclusion_set == "complete-rm_outliers",
                                    expertise_subset == "All") #TODO may need to recalculate
                           ) %>%
  hoist(tidy_mod_summary) %>%
  select(-starts_with("mod"), -ends_with("plot"), -estimate_type) %>%
  unnest(cols = c(tidy_mod_summary))
```

```{r df-new-forest-plot-labels, eval = TRUE, echo = FALSE, include=FALSE, warning = FALSE, message = FALSE}
# from variable_names_for_publication.csv :
forest_plot_new_labels <-
  tibble::tribble(
    ~variable_type,                                                                 ~variable_name,                                                             ~user_friendly_name,
    "x",                                                            "rear_nest_trt_R.E",                                    "contrast: reduced broods vs. enlarged broods",
    "x",                                                            "rear_nest_trt_R.C",                               "contrast: reduced broods vs. unmanipulated broods",
    "x",                                                            "rear_nest_trt_C.E",                              "contrast: unmanipulated broods vs. enlarged broods",
    "x",                                                 "rear_d0_rear_nest_brood_size",                                "brood count at hatching (in unmanipulated nests)",
    "x",                                                     "net_rearing_manipulation",                                       "change in brood count due to manipulation",
    "x",                                                  "rear_Cs_at_start_of_rearing",                                                  "brood count after manipulation",
    "x",                                                     "d14_rear_nest_brood_size",                                           "brood count at 14 days after hatching",
    "x",                                                                  "relative_CS",     "(brood count after manipulation) / (egg or brood count before manipulation)",
    "x",                                                               "percent_change",                               "percent change in brood count due to manipulation",
    "y",                                                                          "SMI",                                            "scaled mass index (Pei & Green 2009)",
    "y",                                                        "residual_day14_weight",                                  "residual weight (controling for tarsus length)",
    "y",                                                 "residual_day_14_weight_males",                             "male residual weight (controling for tarsus length)",
    "y",                                               "residual_day_14_weight_females",                           "female residual weight (controling for tarsus length)",
    "y",                                       "PC1.day_14_weight.day_14_tarsus_length",                    "first principal compenent of PCA of weight and tarsus length",
    "y",                                           "day_14_weight/day_14_tarsus_length",                                                          "weight / tarsus length",
    "y",                                       "day_14_weight/(day_14_tarsus_length^2)",                                                      "weight / (tarsus length^2)",
    "y",                                                "day_14_weight_group_deviation",                                                  "weight deviation within family",
    "y",                                                                "day_14_weight",                                                                          "weight",
    "y",                                         "day_14_tarsus_length_group_deviation",                                           "tarsus length deviation within family",
    "y",                                                         "day_14_tarsus_length",                                                                   "tarsus length",
    "model",                                                                       "linear",                                  "linear model with identity link (normal error)",
    "model",                                                                  "generalised",                              "generalized linear model (error other than normal)",
    "model_subclass",                                                                     "standard",                                                                             "GLM",
    "model_subclass",                                                         "exponential_variance",                                                   "GLM with exponential variance",
    "mixed_model",                                                                            "1",                                          "mixed (fixed and random effects) model",
    "mixed_model",                                                                            "0",                                                              "fixed effects only",
    "response_transformation_description",                                                                      "z.score",                                           "z score (subtract mean, divide by SD)",
    "response_transformation_description",                                                                       "power3",                                                                           "cubed",
    "response_transformation_description",                                                                       "power2",                                                                         "squared",
    "response_transformation_description",                                                                    "orderNorm",                                     "ordered quantile normalizing transformation",
    "response_transformation_description",                                                                         "None",                                                                   "untransformed",
    "response_transformation_description",                                                    "log(max(weight+1)-weight)",                                                     "log((max(weight+1))-weight)",
    "response_transformation_description",                                                                          "log",                                                                 "log transformed",
    "response_transformation_description",                                                                "divided.by.14",                                                                   "divided by 14",
    "response_transformation_description",                                                               "back.transform",                                                     "back transformed by analyst",
    "transformation",                                                                          "log",                                                                        "log link",
    "transformation",                                                                     "identity",                                                                   "identity link",
    "x",                                                      "ExoticAnnualGrass_cover",                                                    "cover by exotic annual grass",
    "x",                                                   "ExoticPerennialGrass_cover",                                                 "cover by exotic perennial grass",
    "x",                                                   "NativePerennialGrass_cover",                                                 "cover by native perennial grass",
    "x",                                                                    "all_grass",     "sum of the cover of all grass types  (with or without non-grass graminoids)",
    "x",                                                             "all_exotic_grass",               "sum of the cover of both exotic annual and exotic perennial grass",
    "x",                                                   "all_native_grass_graminoid", "sum of the cover of both native perennial grass and native perennial graminoids",
    "x",                                                          "all_perennial_grass",                      "sum of the cover of both native and exotic perennial grass",
    "y", "average.proportion.of.plots.containing.at.least.one.euc.seedling.of.any.size",                  "mean proportion of plots with at least one eucalyptus seedling",
    "y",                                                                "euc_sdlgs_all",                                               "count of all eucalyptus seedlings",
    "y",                                                                 "euc_sdlgs>2m",                                        "count of eucalyptus seedlings > 2 m high",
    "y",                                                               "euc_sdlgs>50cm",                                      "count of eucalyptus seedlings > 0.5 m high",
    "y",                                                                "euc_sdlgs0_2m",                                      "count of eucalyptus seedlings 0 - 2 m high",
    "y",                                                              "euc_sdlgs0_50cm",                                    "count of eucalyptus seedlings 0 - 0.5 m high",
    "y",                                                             "euc_sdlgs50cm_2m",                                    "count of eucalyptus seedlings 0.5 - 2 m high",
    "y",                                             "small*0.25+medium*1.25+large*2.5",     "((count 0 - 0.5 m) x 0.25)+((count 0.5 - 2 m) x 1.25)+((count > 2 m) x 2.5)",
    "model",                                                                       "linear",                                  "linear model with identity link (normal error)",
    "model",                                                                  "generalised",                              "generalized linear model (error other than normal)",
    "model_subclass",                                                                "zero_inflated",                                                             "zero inflated model",
    "model_subclass",                                                                     "standard",                                                                             "GLM",
    "model_subclass",                                                          "quantile_regression",                                                             "quantile regression",
    "model_subclass",                                                           "quadratic_variance",                                                     "GLM with quadratic variance",
    "model_subclass",                                                                "mixture_model",                                                                   "mixture model",
    "mixed_model",                                                                            "1",                                          "mixed (fixed and random effects) model",
    "mixed_model",                                                                            "0",                                                              "fixed effects only",
    "response_transformation_description",                                                                      "z.score",                                           "z score (subtract mean, divide by SD)",
    "response_transformation_description",                                                                  "square_root",                                                                     "square root",
    "response_transformation_description",                                                                         "none",                                                                   "untransformed",
    "transformation",                                                                        "logit",                                                                      "logit link",
    "transformation",                                                                          "log",                                                                        "log link",
    "transformation",                                                                     "identity",                                                                   "identity link",
    "transformation",                                                                    "back(log)",                                                       "back-transformed log link",
    "x", "rear_nest_trt_CR.E", "contrast: (unmanipulated broods and reduced birds) vs. enlarged broods"
  ) %>% 
  distinct() # some variable names / replacement pairs are entered twice, once for Eucalyptus, twice for Blue Tit.


forest_plot_new_labels <- forest_plot_new_labels %>% 
	  filter(variable_type != "transformation")
```

```{r}
#| label: fig-specr-bt
#| echo: true
#| warning: false
#| message: false
#| fig-height: 15
#| fig-width: 12
#| fig-align: center
#| fig-cap: "**A.** Forest plot for blue tit analyses: standardized effect-sizes (circles) and their 95% confidence intervals are displayed for each analysis included in the meta-analysis model. The meta-analytic mean effect-size is denoted by a black diamond, with error bars also representing the 95% confidence interval. The dashed black line demarcates effect sizes of 0, whereby no effect of the test variable on the response variable is found. Blue points where Zr and its associated confidence intervals are greater than 0 indicate analyses that found a negative effect of sibling number on nestling growth. Gray coloured points have confidence intervals crossing 0, indicating no relationship between the test and response variable. Red points indicate the analysis found a positive relationship between sibling number and nestling growth. **B.** Analysis specification plot: for each analysis plotted in A, the corresponding combination of analysis decisions is plotted. Each decision and its alternative choices is grouped into its own facet, with the decision point described on the right of the panel, and the option shown on the left. Lines indicate the option chosen used in the corresponding point in plot A. **C.** Sample sizes of each analysis. Note that empty bars indicate analyst did not report sample size and sample size could not be derived by lead team."
#| column: page-right

analytical_choices_bt <- ManyEcoEvo_results$effects_analysis[[1]] %>% 
  select(study_id, 
         response_transformation_description, # Don't need constructed, as this is accounted for in y
         response_variable_name, 
         test_variable, 
         Bayesian, 
         linear_model,
         model_subclass, 
         sample_size, 
         starts_with("num"),
         link_function_reported,
         mixed_model) %>% 
  mutate(across(starts_with("num"), as.numeric),
         response_transformation_description = case_when(is.na(response_transformation_description) ~ "None",
                                                         TRUE ~ response_transformation_description)) %>% 
  rename(y = response_variable_name, x = test_variable, model = linear_model) %>% 
  select(study_id,x,y,model, model_subclass, response_transformation_description, link_function_reported, mixed_model, sample_size) %>% 
  pivot_longer(-study_id, names_to = "variable_type", values_to = "variable_name",values_transform = as.character) %>% 
  left_join(forest_plot_new_labels) %>% 
  mutate(variable_name = case_when(is.na(user_friendly_name) ~ variable_name, TRUE ~ user_friendly_name)) %>% 
  select(-user_friendly_name) %>% 
  pivot_wider(names_from = variable_type, values_from = variable_name) %>% 
  mutate(sample_size = as.numeric(sample_size))


MA_mean_bt <- ManyEcoEvo_viz$model[[1]] %>% 
  broom::tidy(conf.int = TRUE) %>% 
  rename(study_id = term)

results_bt <- ManyEcoEvo_viz$model[[1]] %>% 
  broom::tidy(conf.int = TRUE, include_studies = TRUE) %>% 
  rename(study_id = term) %>% 
  semi_join(analytical_choices_bt) %>% 
  left_join(analytical_choices_bt)

samp_size_hist_bt <- specr::plot_samplesizes(results_bt %>% 
                                               rename(fit_nobs = sample_size)) +
  cowplot::theme_half_open() +
  theme(axis.ticks.x = element_blank(), 
        axis.text.x = element_blank())

curve_bt <- specr::plot_curve(results_bt) +
  geom_hline(yintercept = 0, 
             linetype = "dashed", 
             color = "black") +
  geom_pointrange(mapping = aes(x = 0, y = estimate, ymin = conf.low, ymax = conf.high ), 
                  data = MA_mean_bt,
                  colour = "black", shape = "diamond") +
  labs(x = "", y = "Standardized Effect Size Zr") +
  cowplot::theme_half_open() +
  theme(axis.ticks.x = element_blank(), 
        axis.text.x = element_blank())

specs_bt <- specr::plot_choices(results_bt %>% 
                                  rename("Independent\nVariable" = x,
                                         "Dependent\nVariable" = y,
                                         Model = model,
                                         "Model Subclass" = model_subclass,
                                         "Mixed Model" = mixed_model,
                                         "Response\nTransformation\nDescription" = response_transformation_description,
                                         "Link Function" = link_function_reported), 
                                choices = c("Independent\nVariable", 
                                            "Dependent\nVariable", 
                                            "Model", 
                                            "Model Subclass", 
                                            "Mixed Model", 
                                            "Response\nTransformation\nDescription", 
                                            "Link Function")) +
  labs(x = "specifications (ranked)") +
  theme(strip.text.x = element_blank(),
        strip.text.y =  element_text(size = 8, angle = 360, face = "bold"),
        axis.ticks.x = element_blank(), 
        axis.text.x = element_blank()) 


cowplot::plot_grid(curve_bt, specs_bt, samp_size_hist_bt,
                   ncol = 1,
                   align = "v",
                   rel_heights = c(1.5, 2.2, 0.8),
                   axis = "rbl",labels = "AUTO") 
  
```

### *Eucalyptus*

In the *Eucalyptus* specification curve, there are no strong trends (@fig-specr-euc). It is, perhaps, the case that choosing the dependent variable 'count of seedlings 0-0.5m high' corresponds to more positive results and choosing 'count of all *Eucalytpus* seedlings' might find more negative results. Choosing the independent variable 'sum of all grass types (with or without non-grass graminoids)' might be associated with more results close to zero consistent with the absence of an effect.

```{r}
#| label: fig-specr-euc
#| fig-align: center
#| message: false
#| warning: false
#| echo: true
#| fig-width: 12
#| fig-height: 15
#| fig-cap:  "**A.** Forest plot for *Eucalyptus* analyses: standardized effect-sizes (circles) and their 95% confidence intervals are displayed for each analysis included in the meta-analysis model. The meta-analytic mean effect-size is denoted by a black diamond, with error bars also representing the 95% confidence interval. The dashed black line demarcates effect sizes of 0, whereby no effect of the test variable on the response variable is found. Blue points where $Z_r$ and its associated confidence intervals are greater than 0 indicate analyses that found a positive relationship of grass cover on *Eucalyptus* seedling success. Gray coloured points have confidence intervals crossing 0, indicating no relationship between the test and response variable. Red points indicate the analysis found a negative relationship between grass cover and *Eucalyptus seedling success*. **B.** Analysis specification plot: for each analysis plotted in A, the corresponding combination of analysis decisions is plotted. Each decision and its alternative choices is grouped into its own facet, with the decision point described on the right of the panel, and the option shown on the left. Lines indicate the option chosen used in the corresponding point in plot A. **C.** Sample sizes of each analysis. Note that empty bars indicate analyst did not report sample size and sample size could not be derived by lead team."
#| column: page-right

analytical_choices_euc <- ManyEcoEvo_results$effects_analysis[[2]] %>% 
  select(study_id, 
         response_transformation_description, # Don't need constructed, as this is accounted for in y
         response_variable_name, 
         test_variable, 
         Bayesian, 
         linear_model,
         model_subclass, 
         sample_size, 
         starts_with("num"),
         transformation,
         mixed_model,
         link_function_reported) %>% 
  mutate(across(starts_with("num"), as.numeric),
         response_transformation_description = case_when(is.na(response_transformation_description) ~ "None",
                                                         TRUE ~ response_transformation_description),
         response_variable_name = case_when(response_variable_name == "average.proportion.of.plots.containing.at.least.one.euc.seedling.of.any.size" ~ "mean.prop.plots>=1seedling",
                                            TRUE ~ response_variable_name)) %>% 
  rename(y = response_variable_name, x = test_variable, model = linear_model) %>% 
  select(study_id,x,y,model, model_subclass, response_transformation_description, link_function_reported, mixed_model, sample_size) %>% 
  pivot_longer(-study_id, names_to = "variable_type", values_to = "variable_name",values_transform = as.character) %>% 
  left_join(forest_plot_new_labels) %>% 
  mutate(variable_name = case_when(is.na(user_friendly_name) ~ variable_name, TRUE ~ user_friendly_name)) %>% 
  select(-user_friendly_name) %>% 
  pivot_wider(names_from = variable_type, values_from = variable_name, values_fn = list) %>% 
  unnest(cols = everything()) %>% #TODO remove unnest and values_fn = list when origin of duplicate entry for R_1LRqq2WHrQaENtM-1-1-1 is identified
  mutate(sample_size = as.numeric(sample_size))



MA_mean_euc <- ManyEcoEvo_viz %>% 
  filter(model_name == "MA_mod", publishable_subset == "All", dataset == "eucalyptus", exclusion_set == "complete") %>% 
  pluck("model", 1) %>% 
  broom::tidy(conf.int = TRUE) %>% 
  rename(study_id = term) 

results_euc <- ManyEcoEvo_viz %>% 
  filter(model_name == "MA_mod", publishable_subset == "All", dataset == "eucalyptus", exclusion_set == "complete") %>% 
  pluck("model", 1) %>% 
  broom::tidy(conf.int = TRUE, include_studies = TRUE) %>% 
  rename(study_id = term) %>% 
  semi_join(analytical_choices_euc) %>% 
  left_join(analytical_choices_euc)

samp_size_hist_euc <- specr::plot_samplesizes(results_euc %>% rename(fit_nobs = sample_size)) +
  cowplot::theme_half_open() +
  theme(axis.ticks.x = element_blank(), axis.text.x = element_blank())

curve_euc <- specr::plot_curve(results_euc) +
  geom_hline(yintercept = 0, 
             linetype = "dashed", 
             color = "black") +
  geom_pointrange(mapping = aes(x = 0, y = estimate, ymin = conf.low, ymax = conf.high ), 
                  data = MA_mean_euc,
                  colour = "black", shape = "diamond") +
  labs(x = "", y = "Standardized Effect Size Zr") +
  cowplot::theme_half_open() +
  theme(axis.ticks.x = element_blank(), 
        axis.text.x = element_blank())

specs_euc <- specr::plot_choices(results_euc %>% 
                                  rename("Independent\nVariable" = x,
                                         "Dependent\nVariable" = y,
                                         Model = model,
                                         "Model Subclass" = model_subclass,
                                         "Mixed Model" = mixed_model,
                                         "Response\nTransformation\nDescription" = response_transformation_description,
                                         "Link Function" = link_function_reported), 
                                choices = c("Independent\nVariable", 
                                            "Dependent\nVariable", 
                                            "Model", 
                                            "Model Subclass", 
                                            "Mixed Model", 
                                            "Response\nTransformation\nDescription", 
                                            "Link Function")) +
  labs(x = "specifications (ranked)") +
  theme(strip.text.x = element_blank(),
        strip.text.y =  element_text(size = 8, angle = 360, face = "bold"),
        axis.ticks.x = element_blank(), 
        axis.text.x = element_blank()) 

cowplot::plot_grid(curve_euc, specs_euc, samp_size_hist_euc,
          ncol = 1,
          align = "v",
          rel_heights = c(1.5, 2.2, 0.8),
          axis = "rbl",labels = "AUTO") 
```
